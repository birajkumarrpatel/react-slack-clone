{"ast":null,"code":"import * as actionTypes from \"./types\";\n/* User Actions */\n\nexport const setUser = user => {\n  return {\n    type: actionTypes.SET_USER,\n    payload: {\n      currentUser: user\n    }\n  };\n};\nexport const clearUser = () => {\n  return {\n    type: actionTypes.CLEAR_USER\n  };\n};\n/* Channel Actions */\n\nexport const setCurrentChannel = channel => {\n  return {\n    type: actionTypes.SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel\n    }\n  };\n};\nexport const setPrivateChannel = isPrivateChannel => {\n  return {\n    type: actionTypes.SET_PRIVATE_CHANNEL,\n    payload: {\n      isPrivateChannel\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/src/actions/index.js"],"names":["actionTypes","setUser","user","type","SET_USER","payload","currentUser","clearUser","CLEAR_USER","setCurrentChannel","channel","SET_CURRENT_CHANNEL","currentChannel","setPrivateChannel","isPrivateChannel","SET_PRIVATE_CHANNEL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,SAA7B;AAEA;;AACA,OAAO,MAAMC,OAAO,GAAGC,IAAI,IAAI;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI,QADb;AAELC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAEJ;AADN;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,MAAMK,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLJ,IAAAA,IAAI,EAAEH,WAAW,CAACQ;AADb,GAAP;AAGD,CAJM;AAMP;;AACA,OAAO,MAAMC,iBAAiB,GAAGC,OAAO,IAAI;AAC1C,SAAO;AACLP,IAAAA,IAAI,EAAEH,WAAW,CAACW,mBADb;AAELN,IAAAA,OAAO,EAAE;AACPO,MAAAA,cAAc,EAAEF;AADT;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,MAAMG,iBAAiB,GAAGC,gBAAgB,IAAI;AACnD,SAAO;AACLX,IAAAA,IAAI,EAAEH,WAAW,CAACe,mBADb;AAELV,IAAAA,OAAO,EAAE;AACPS,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPM","sourcesContent":["import * as actionTypes from \"./types\";\n\n/* User Actions */\nexport const setUser = user => {\n  return {\n    type: actionTypes.SET_USER,\n    payload: {\n      currentUser: user\n    }\n  };\n};\n\nexport const clearUser = () => {\n  return {\n    type: actionTypes.CLEAR_USER\n  };\n};\n\n/* Channel Actions */\nexport const setCurrentChannel = channel => {\n  return {\n    type: actionTypes.SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel\n    }\n  };\n};\n\nexport const setPrivateChannel = isPrivateChannel => {\n  return {\n    type: actionTypes.SET_PRIVATE_CHANNEL,\n    payload: {\n      isPrivateChannel\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}