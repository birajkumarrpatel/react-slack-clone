{"ast":null,"code":"import _toConsumableArray from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import firebase from\"../../firebase\";import{connect}from\"react-redux\";import{setCurrentChannel,setPrivateChannel}from\"../../actions\";import{Menu,Icon}from\"semantic-ui-react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Starred=/*#__PURE__*/function(_React$Component){_inherits(Starred,_React$Component);var _super=_createSuper(Starred);function Starred(){var _this;_classCallCheck(this,Starred);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={user:_this.props.currentUser,usersRef:firebase.database().ref(\"users\"),activeChannel:\"\",starredChannels:[]};_this.removeListener=function(){_this.state.usersRef.child(\"\".concat(_this.state.user.uid,\"/starred\")).off();};_this.addListeners=function(userId){_this.state.usersRef.child(userId).child(\"starred\").on(\"child_added\",function(snap){var starredChannel=_objectSpread({id:snap.key},snap.val());_this.setState({starredChannels:[].concat(_toConsumableArray(_this.state.starredChannels),[starredChannel])});});_this.state.usersRef.child(userId).child(\"starred\").on(\"child_removed\",function(snap){var channelToRemove=_objectSpread({id:snap.key},snap.val());var filteredChannels=_this.state.starredChannels.filter(function(channel){return channel.id!==channelToRemove.id;});_this.setState({starredChannels:filteredChannels});});};_this.setActiveChannel=function(channel){_this.setState({activeChannel:channel.id});};_this.changeChannel=function(channel){_this.setActiveChannel(channel);_this.props.setCurrentChannel(channel);_this.props.setPrivateChannel(false);};_this.displayChannels=function(starredChannels){return starredChannels.length>0&&starredChannels.map(function(channel){return/*#__PURE__*/_jsxs(Menu.Item,{onClick:function onClick(){return _this.changeChannel(channel);},name:channel.name,style:{opacity:0.7},active:channel.id===_this.state.activeChannel,children:[\"# \",channel.name]},channel.id);});};return _this;}_createClass(Starred,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.state.user){this.addListeners(this.state.user.uid);}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.removeListener();}},{key:\"render\",value:function render(){var _this$state=this.state,starredChannels=_this$state.starredChannels,modal=_this$state.modal;return/*#__PURE__*/_jsxs(Menu.Menu,{className:\"menu\",children:[/*#__PURE__*/_jsxs(Menu.Item,{children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(Icon,{name:\"star\"}),\" STARRED\"]}),\" \",\"(\",starredChannels.length,\")\"]}),this.displayChannels(starredChannels)]});}}]);return Starred;}(React.Component);export default connect(null,{setCurrentChannel:setCurrentChannel,setPrivateChannel:setPrivateChannel})(Starred);","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/src/components/SidePanel/Starred.js"],"names":["React","firebase","connect","setCurrentChannel","setPrivateChannel","Menu","Icon","Starred","state","user","props","currentUser","usersRef","database","ref","activeChannel","starredChannels","removeListener","child","uid","off","addListeners","userId","on","snap","starredChannel","id","key","val","setState","channelToRemove","filteredChannels","filter","channel","setActiveChannel","changeChannel","displayChannels","length","map","name","opacity","modal","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nclass Starred extends React.Component {\r\n    state = {\r\n        user: this.props.currentUser,\r\n        usersRef: firebase.database().ref(\"users\"),\r\n        activeChannel:\"\",\r\n        starredChannels: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        if(this.state.user) {\r\n            this.addListeners(this.state.user.uid);\r\n        }    \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.removeListener();\r\n    }\r\n\r\n    removeListener = () => {\r\n        this.state.usersRef.child(`${this.state.user.uid}/starred`).off();\r\n    }\r\n\r\n    addListeners = userId => {\r\n        this.state.usersRef\r\n        .child(userId)\r\n        .child(\"starred\")\r\n        .on(\"child_added\", snap => {\r\n            const starredChannel = { id: snap.key, ...snap.val() };\r\n            this.setState ({\r\n                starredChannels: [...this.state.starredChannels, starredChannel]\r\n            });\r\n        });\r\n    this.state.usersRef\r\n        .child(userId)\r\n        .child(\"starred\")\r\n        .on (\"child_removed\", snap => {\r\n            const channelToRemove = { id: snap.key, ...snap.val()};\r\n            const filteredChannels = this.state.starredChannels.filter(channel => {\r\n                return channel.id !== channelToRemove.id;\r\n            });\r\n            this.setState({ starredChannels: filteredChannels});\r\n        });\r\n    }\r\n\r\n    setActiveChannel = channel => {\r\n        this.setState({ activeChannel: channel.id });\r\n    };\r\n\r\n    changeChannel = channel => {\r\n        this.setActiveChannel(channel);\r\n        this.props.setCurrentChannel(channel);\r\n        this.props.setPrivateChannel(false);\r\n    };\r\n\r\n    displayChannels = starredChannels =>\r\n    starredChannels.length > 0 &&\r\n    starredChannels.map(channel => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.7 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ));\r\n\r\n    render() {\r\n        const { starredChannels, modal } =  this.state;\r\n\r\n        return(\r\n            <Menu.Menu className=\"menu\">\r\n                <Menu.Item>\r\n                <span>\r\n                    <Icon name=\"star\" /> STARRED\r\n                </span>{\" \"}\r\n                ({starredChannels.length}) \r\n                </Menu.Item>\r\n                {this.displayChannels(starredChannels)}\r\n            </Menu.Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { setCurrentChannel, setPrivateChannel }\r\n)(Starred);"]},"metadata":{},"sourceType":"module"}