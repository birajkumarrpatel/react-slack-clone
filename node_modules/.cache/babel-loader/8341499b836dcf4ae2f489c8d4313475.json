{"ast":null,"code":"import _slicedToArray from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Segment,Header,Icon,Accordion,Image,List}from\"semantic-ui-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MetaPanel=/*#__PURE__*/function(_React$Component){_inherits(MetaPanel,_React$Component);var _super=_createSuper(MetaPanel);function MetaPanel(){var _this;_classCallCheck(this,MetaPanel);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={channel:_this.props.currentChannel,privateChannel:_this.props.isPrivateChannel,activeIndex:0};_this.setActiveIndex=function(event,titleProps){var index=titleProps.index;var activeIndex=_this.state.activeIndex;var newIndex=activeIndex===index?-1:index;_this.setState({activeIndex:newIndex});};_this.formatCount=function(num){return num>1||num===0?\"\".concat(num,\" posts\"):\"\".concat(num,\" post\");};_this.displayTopPosters=function(posts){return Object.entries(posts).sort(function(a,b){return b[1]-a[1];}).map(function(_ref,i){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],val=_ref2[1];return/*#__PURE__*/_jsxs(List.Item,{children:[/*#__PURE__*/_jsx(Image,{avatar:true,src:val.avatar}),/*#__PURE__*/_jsxs(List.Content,{children:[/*#__PURE__*/_jsx(List.Header,{as:\"a\",children:key}),/*#__PURE__*/_jsx(List.Description,{as:\"a\",children:_this.formatCount(val.count)})]})]},i);}).slice(0,5);};return _this;}_createClass(MetaPanel,[{key:\"render\",value:function render(){var _this$state=this.state,activeIndex=_this$state.activeIndex,privateChannel=_this$state.privateChannel,channel=_this$state.channel;var userPosts=this.props.userPosts;if(privateChannel)return null;return/*#__PURE__*/_jsxs(Segment,{loading:!channel,children:[/*#__PURE__*/_jsxs(Header,{as:\"h3\",attached:\"top\",children:[\"About # \",channel&&channel.name]}),/*#__PURE__*/_jsxs(Accordion,{styled:true,attached:\"true\",children:[/*#__PURE__*/_jsxs(Accordion.Title,{active:activeIndex===0,index:0,onClick:this.setActiveIndex,children:[/*#__PURE__*/_jsx(Icon,{name:\"dropdown\"}),/*#__PURE__*/_jsx(Icon,{name:\"info\"}),\"Channel Details\"]}),/*#__PURE__*/_jsx(Accordion.Content,{active:activeIndex===0,children:channel&&channel.details}),/*#__PURE__*/_jsxs(Accordion.Title,{active:activeIndex===1,index:1,onClick:this.setActiveIndex,children:[/*#__PURE__*/_jsx(Icon,{name:\"dropdown\"}),/*#__PURE__*/_jsx(Icon,{name:\"user circle\"}),\"Top Posters\"]}),/*#__PURE__*/_jsx(Accordion.Content,{active:activeIndex===1,children:/*#__PURE__*/_jsx(List,{children:userPosts&&this.displayTopPosters(userPosts)})}),/*#__PURE__*/_jsxs(Accordion.Title,{active:activeIndex===2,index:2,onClick:this.setActiveIndex,children:[/*#__PURE__*/_jsx(Icon,{name:\"dropdown\"}),/*#__PURE__*/_jsx(Icon,{name:\"pencil alternate\"}),\"Created By\"]}),/*#__PURE__*/_jsx(Accordion.Content,{active:activeIndex===2,children:/*#__PURE__*/_jsxs(Header,{as:\"h3\",children:[/*#__PURE__*/_jsx(Image,{circular:true,src:channel&&channel.createdBy.avatar}),channel&&channel.createdBy.name]})})]})]});}}]);return MetaPanel;}(React.Component);export default MetaPanel;","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/src/components/MetaPanel/MetaPanel.js"],"names":["React","Segment","Header","Icon","Accordion","Image","List","MetaPanel","state","channel","props","currentChannel","privateChannel","isPrivateChannel","activeIndex","setActiveIndex","event","titleProps","index","newIndex","setState","formatCount","num","displayTopPosters","posts","Object","entries","sort","a","b","map","i","key","val","avatar","count","slice","userPosts","name","details","createdBy","Component"],"mappings":"2wBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,CAAkBC,MAAlB,CAA0BC,IAA1B,CAAgCC,SAAhC,CAA2CC,KAA3C,CAAkDC,IAAlD,KAA8D,mBAA9D,C,2FAEMC,CAAAA,S,mVACJC,K,CAAQ,CACNC,OAAO,CAAE,MAAKC,KAAL,CAAWC,cADd,CAENC,cAAc,CAAE,MAAKF,KAAL,CAAWG,gBAFrB,CAGNC,WAAW,CAAE,CAHP,C,OAMRC,c,CAAiB,SAACC,KAAD,CAAQC,UAAR,CAAuB,IAC9BC,CAAAA,KAD8B,CACpBD,UADoB,CAC9BC,KAD8B,IAE9BJ,CAAAA,WAF8B,CAEd,MAAKN,KAFS,CAE9BM,WAF8B,CAGtC,GAAMK,CAAAA,QAAQ,CAAGL,WAAW,GAAKI,KAAhB,CAAwB,CAAC,CAAzB,CAA6BA,KAA9C,CACA,MAAKE,QAAL,CAAc,CAAEN,WAAW,CAAEK,QAAf,CAAd,EACD,C,OAEDE,W,CAAc,SAAAC,GAAG,QAAKA,CAAAA,GAAG,CAAG,CAAN,EAAWA,GAAG,GAAK,CAApB,WAA4BA,GAA5B,qBAA6CA,GAA7C,SAAJ,E,OAEjBC,iB,CAAoB,SAAAC,KAAK,QACvBC,CAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf,EACGG,IADH,CACQ,SAACC,CAAD,CAAIC,CAAJ,QAAUA,CAAAA,CAAC,CAAC,CAAD,CAAD,CAAOD,CAAC,CAAC,CAAD,CAAlB,EADR,EAEGE,GAFH,CAEO,cAAaC,CAAb,mCAAEC,GAAF,UAAOC,GAAP,6BACH,MAAC,IAAD,CAAM,IAAN,yBACA,KAAC,KAAD,EAAO,MAAM,KAAb,CAAc,GAAG,CAAEA,GAAG,CAACC,MAAvB,EADA,cAEA,MAAC,IAAD,CAAM,OAAN,yBACE,KAAC,IAAD,CAAM,MAAN,EAAa,EAAE,CAAC,GAAhB,UACGF,GADH,EADF,cAIE,KAAC,IAAD,CAAM,WAAN,EAAkB,EAAE,CAAC,GAArB,UACG,MAAKX,WAAL,CAAiBY,GAAG,CAACE,KAArB,CADH,EAJF,GAFA,GAAgBJ,CAAhB,CADG,EAFP,EAeCK,KAfD,CAeO,CAfP,CAeU,CAfV,CADuB,E,2DAmBzB,iBAAS,iBAC0C,KAAK5B,KAD/C,CACCM,WADD,aACCA,WADD,CACcF,cADd,aACcA,cADd,CAC8BH,OAD9B,aAC8BA,OAD9B,IAEC4B,CAAAA,SAFD,CAEe,KAAK3B,KAFpB,CAEC2B,SAFD,CAIP,GAAGzB,cAAH,CAAmB,MAAO,KAAP,CAEnB,mBACE,MAAC,OAAD,EAAS,OAAO,CAAE,CAACH,OAAnB,wBACE,MAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,CAAgB,QAAQ,CAAC,KAAzB,sBACWA,OAAO,EAAIA,OAAO,CAAC6B,IAD9B,GADF,cAIE,MAAC,SAAD,EAAW,MAAM,KAAjB,CAAkB,QAAQ,CAAC,MAA3B,wBACE,MAAC,SAAD,CAAW,KAAX,EACE,MAAM,CAAExB,WAAW,GAAK,CAD1B,CAEE,KAAK,CAAE,CAFT,CAGE,OAAO,CAAE,KAAKC,cAHhB,wBAKE,KAAC,IAAD,EAAM,IAAI,CAAC,UAAX,EALF,cAME,KAAC,IAAD,EAAM,IAAI,CAAC,MAAX,EANF,qBADF,cAUE,KAAC,SAAD,CAAW,OAAX,EAAmB,MAAM,CAAED,WAAW,GAAK,CAA3C,UACGL,OAAO,EAAIA,OAAO,CAAC8B,OADtB,EAVF,cAcE,MAAC,SAAD,CAAW,KAAX,EACE,MAAM,CAAEzB,WAAW,GAAK,CAD1B,CAEE,KAAK,CAAE,CAFT,CAGE,OAAO,CAAE,KAAKC,cAHhB,wBAKE,KAAC,IAAD,EAAM,IAAI,CAAC,UAAX,EALF,cAME,KAAC,IAAD,EAAM,IAAI,CAAC,aAAX,EANF,iBAdF,cAuBE,KAAC,SAAD,CAAW,OAAX,EAAmB,MAAM,CAAED,WAAW,GAAK,CAA3C,uBACE,KAAC,IAAD,WACIuB,SAAS,EAAI,KAAKd,iBAAL,CAAuBc,SAAvB,CADjB,EADF,EAvBF,cA6BE,MAAC,SAAD,CAAW,KAAX,EACE,MAAM,CAAEvB,WAAW,GAAK,CAD1B,CAEE,KAAK,CAAE,CAFT,CAGE,OAAO,CAAE,KAAKC,cAHhB,wBAKE,KAAC,IAAD,EAAM,IAAI,CAAC,UAAX,EALF,cAME,KAAC,IAAD,EAAM,IAAI,CAAC,kBAAX,EANF,gBA7BF,cAsCE,KAAC,SAAD,CAAW,OAAX,EAAmB,MAAM,CAAED,WAAW,GAAK,CAA3C,uBACE,MAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,wBACE,KAAC,KAAD,EAAO,QAAQ,KAAf,CAAgB,GAAG,CAAEL,OAAO,EAAIA,OAAO,CAAC+B,SAAR,CAAkBN,MAAlD,EADF,CAEGzB,OAAO,EAAIA,OAAO,CAAC+B,SAAR,CAAkBF,IAFhC,GADF,EAtCF,GAJF,GADF,CAoDD,C,uBA7FqBtC,KAAK,CAACyC,S,EAgG9B,cAAelC,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { Segment, Header, Icon, Accordion, Image, List } from \"semantic-ui-react\";\n\nclass MetaPanel extends React.Component {\n  state = {\n    channel: this.props.currentChannel,\n    privateChannel: this.props.isPrivateChannel,\n    activeIndex: 0\n  }\n\n  setActiveIndex = (event, titleProps) => { \n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  formatCount = num => (num > 1 || num === 0) ? `${num} posts` : `${num} post`;\n\n  displayTopPosters = posts => (\n    Object.entries(posts)\n      .sort((a, b) => b[1] - a[1])\n      .map(([key, val], i) => (\n        <List.Item key={i}>\n        <Image avatar src={val.avatar}/>\n        <List.Content>\n          <List.Header as=\"a\">\n            {key}\n          </List.Header>\n          <List.Description as=\"a\">\n            {this.formatCount(val.count)}\n          </List.Description>\n        </List.Content>\n        </List.Item>\n    ))\n    .slice(0, 5)\n  )\n\n  render() {\n    const { activeIndex, privateChannel, channel } = this.state;\n    const { userPosts } = this.props;\n\n    if(privateChannel) return null;\n \n    return (\n      <Segment loading={!channel}>\n        <Header as=\"h3\" attached=\"top\">\n          About # {channel && channel.name}\n        </Header>\n        <Accordion styled attached=\"true\"> \n          <Accordion.Title\n            active={activeIndex === 0}\n            index={0}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"info\" />\n            Channel Details\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 0}>\n            {channel && channel.details} \n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 1}\n            index={1}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"user circle\" />\n            Top Posters\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 1}>\n            <List>\n              { userPosts && this.displayTopPosters(userPosts) }\n            </List>             \n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 2}\n            index={2}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"pencil alternate\" />\n            Created By\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 2}>\n            <Header as=\"h3\">\n              <Image circular src={channel && channel.createdBy.avatar} /> \n              {channel && channel.createdBy.name}    \n            </Header>\n          </Accordion.Content>\n        </Accordion>\n      </Segment>\n    );\n  }\n}\n\nexport default MetaPanel;\n"]},"metadata":{},"sourceType":"module"}