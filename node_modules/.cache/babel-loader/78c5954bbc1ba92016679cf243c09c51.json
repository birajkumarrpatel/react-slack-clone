{"ast":null,"code":"import React from\"react\";import{Grid}from\"semantic-ui-react\";import\"./App.css\";import{connect}from\"react-redux\";import ColorPanel from\"./ColorPanel/ColorPanel\";import SidePanel from\"./SidePanel/SidePanel\";import Messages from\"./Messages/Messages\";import MetaPanel from\"./MetaPanel/MetaPanel\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(_ref){var currentUser=_ref.currentUser,currentChannel=_ref.currentChannel,isPrivateChannel=_ref.isPrivateChannel,userPosts=_ref.userPosts,primaryColor=_ref.primaryColor,secondaryColor=_ref.secondaryColor;return/*#__PURE__*/_jsxs(Grid,{columns:\"equal\",className:\"app\",style:{background:secondaryColor},children:[/*#__PURE__*/_jsx(ColorPanel,{currentUser:currentUser},currentUser&&currentUser.name),/*#__PURE__*/_jsx(SidePanel,{currentUser:currentUser,primaryColor:primaryColor},currentUser&&currentUser.uid),/*#__PURE__*/_jsx(Grid.Column,{style:{marginLeft:320},children:/*#__PURE__*/_jsx(Messages,{currentChannel:currentChannel,currentUser:currentUser,isPrivateChannel:isPrivateChannel},currentChannel&&currentChannel.id)}),/*#__PURE__*/_jsx(Grid.Column,{width:4,children:/*#__PURE__*/_jsx(MetaPanel,{userPosts:userPosts,currentChannel:currentChannel,isPrivateChannel:isPrivateChannel},currentChannel&&currentChannel.name)})]});};var mapStateToProps=function mapStateToProps(state){return{currentUser:state.user.currentUser,currentChannel:state.channel.currentChannel,isPrivateChannel:state.channel.isPrivateChannel,userPosts:state.channel.userPosts,primaryColor:state.colors.primaryColor,secondaryColor:state.colors.secondaryColor};};export default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/src/components/App.js"],"names":["React","Grid","connect","ColorPanel","SidePanel","Messages","MetaPanel","App","currentUser","currentChannel","isPrivateChannel","userPosts","primaryColor","secondaryColor","background","name","uid","marginLeft","id","mapStateToProps","state","user","channel","colors"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,MAAO,WAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,UAAGC,CAAAA,WAAH,MAAGA,WAAH,CAAgBC,cAAhB,MAAgBA,cAAhB,CAAgCC,gBAAhC,MAAgCA,gBAAhC,CAAkDC,SAAlD,MAAkDA,SAAlD,CACZC,YADY,MACZA,YADY,CACEC,cADF,MACEA,cADF,oBAEV,MAAC,IAAD,EAAM,OAAO,CAAC,OAAd,CAAsB,SAAS,CAAC,KAAhC,CAAsC,KAAK,CAAE,CAAEC,UAAU,CAAED,cAAd,CAA7C,wBACE,KAAC,UAAD,EAEE,WAAW,CAAEL,WAFf,EACOA,WAAW,EAAIA,WAAW,CAACO,IADlC,CADF,cAKE,KAAC,SAAD,EAEE,WAAW,CAAEP,WAFf,CAGE,YAAY,CAAEI,YAHhB,EACOJ,WAAW,EAAIA,WAAW,CAACQ,GADlC,CALF,cAWE,KAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAAEC,UAAU,CAAE,GAAd,CAApB,uBACE,KAAC,QAAD,EAEE,cAAc,CAAER,cAFlB,CAGE,WAAW,CAAED,WAHf,CAIE,gBAAgB,CAAEE,gBAJpB,EACOD,cAAc,EAAIA,cAAc,CAACS,EADxC,CADF,EAXF,cAoBE,KAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAApB,uBACE,KAAC,SAAD,EAEE,SAAS,CAAEP,SAFb,CAGE,cAAc,CAAEF,cAHlB,CAIE,gBAAgB,CAAEC,gBAJpB,EACOD,cAAc,EAAIA,cAAc,CAACM,IADxC,CADF,EApBF,GAFU,EAAZ,CAiCA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCZ,WAAW,CAAEY,KAAK,CAACC,IAAN,CAAWb,WADQ,CAEhCC,cAAc,CAAEW,KAAK,CAACE,OAAN,CAAcb,cAFE,CAGhCC,gBAAgB,CAAEU,KAAK,CAACE,OAAN,CAAcZ,gBAHA,CAIhCC,SAAS,CAAES,KAAK,CAACE,OAAN,CAAcX,SAJO,CAKhCC,YAAY,CAAEQ,KAAK,CAACG,MAAN,CAAaX,YALK,CAMhCC,cAAc,CAAEO,KAAK,CAACG,MAAN,CAAaV,cANG,CAAL,EAA7B,CASA,cAAeX,CAAAA,OAAO,CAACiB,eAAD,CAAP,CAAyBZ,GAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\n\nimport ColorPanel from \"./ColorPanel/ColorPanel\";\nimport SidePanel from \"./SidePanel/SidePanel\";\nimport Messages from \"./Messages/Messages\";\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\n\nconst App = ({ currentUser, currentChannel, isPrivateChannel, userPosts,\nprimaryColor, secondaryColor }) => (\n  <Grid columns=\"equal\" className=\"app\" style={{ background: secondaryColor }}>\n    <ColorPanel\n      key={currentUser && currentUser.name}\n      currentUser={currentUser}\n    />\n    <SidePanel \n      key={currentUser && currentUser.uid} \n      currentUser={currentUser}\n      primaryColor={primaryColor} \n    />\n\n    <Grid.Column style={{ marginLeft: 320 }}>\n      <Messages\n        key={currentChannel && currentChannel.id}\n        currentChannel={currentChannel}\n        currentUser={currentUser}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n\n    <Grid.Column width={4}>\n      <MetaPanel\n        key={currentChannel && currentChannel.name}\n        userPosts={userPosts}\n        currentChannel={currentChannel}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n  </Grid>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n  userPosts: state.channel.userPosts,\n  primaryColor: state.colors.primaryColor,\n  secondaryColor: state.colors.secondaryColor\n});\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}