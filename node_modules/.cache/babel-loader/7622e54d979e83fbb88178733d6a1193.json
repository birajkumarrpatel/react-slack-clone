{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIRAJ\\\\Desktop\\\\helping-hand\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Spinner from \"./Spinner\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport firebase from \"./firebase\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { BrowserRouter as Router, Switch, Route, withRouter } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport { setUser, clearUser } from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // console.log(user);\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.history.push(\"/login\");\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: App\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        component: Register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateFromProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nconst RootWithAuth = withRouter(connect(mapStateFromProps, {\n  setUser,\n  clearUser\n})(Root));\n_c = RootWithAuth;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(RootWithAuth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\nregisterServiceWorker();\n\nvar _c;\n\n$RefreshReg$(_c, \"RootWithAuth\");","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/helping-hand/src/index.js"],"names":["React","ReactDOM","App","Login","Register","Spinner","registerServiceWorker","firebase","BrowserRouter","Router","Switch","Route","withRouter","createStore","Provider","connect","composeWithDevTools","rootReducer","setUser","clearUser","store","Root","Component","componentDidMount","auth","onAuthStateChanged","user","props","history","push","render","isLoading","mapStateFromProps","state","RootWithAuth","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,kCAAP;AAEA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,UAJF,QAKO,kBALP;AAOA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;;AAEA,MAAMC,KAAK,GAAGP,WAAW,CAACI,WAAD,EAAcD,mBAAmB,EAAjC,CAAzB;;AAEA,MAAMK,IAAN,SAAmBrB,KAAK,CAACsB,SAAzB,CAAmC;AACjCC,EAAAA,iBAAiB,GAAG;AAClBhB,IAAAA,QAAQ,CAACiB,IAAT,GAAgBC,kBAAhB,CAAmCC,IAAI,IAAI;AACzC,UAAIA,IAAJ,EAAU;AACR;AACA,aAAKC,KAAL,CAAWT,OAAX,CAAmBQ,IAAnB;AACA,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OAJD,MAIO;AACL,aAAKF,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACA,aAAKF,KAAL,CAAWR,SAAX;AACD;AACF,KATD;AAUD;;AAEDW,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKH,KAAL,CAAWI,SAAX,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAE7B;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AASD;;AAxBgC;;AA2BnC,MAAM4B,iBAAiB,GAAGC,KAAK,KAAK;AAClCF,EAAAA,SAAS,EAAEE,KAAK,CAACP,IAAN,CAAWK;AADY,CAAL,CAA/B;;AAIA,MAAMG,YAAY,GAAGtB,UAAU,CAC7BG,OAAO,CACLiB,iBADK,EAEL;AAAEd,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAFK,CAAP,CAGEE,IAHF,CAD6B,CAA/B;KAAMa,Y;AAONjC,QAAQ,CAAC6B,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA,yBACE,QAAC,MAAD;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEe,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;AAQA9B,qBAAqB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Spinner from \"./Spinner\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport firebase from \"./firebase\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\n\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport { setUser, clearUser } from \"./actions\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // console.log(user);\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.history.push(\"/login\");\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateFromProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nconst RootWithAuth = withRouter(\n  connect(\n    mapStateFromProps,\n    { setUser, clearUser }\n  )(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}