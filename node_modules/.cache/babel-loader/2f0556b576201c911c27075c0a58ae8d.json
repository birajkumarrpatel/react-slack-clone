{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIRAJ\\\\Desktop\\\\react-slack-clone\\\\src\\\\components\\\\Messages\\\\MessageForm.js\";\nimport React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport firebase from \"../../firebase\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport FileModal from \"./FileModal\";\nimport ProgressBar from \"./ProgressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MessageForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      storageRef: firebase.storage().ref(),\n      uploadTask: null,\n      uploadState: \"\",\n      percentUploaded: 0,\n      message: \"\",\n      channel: this.props.currentChannel,\n      user: this.props.currentUser,\n      loading: false,\n      errors: [],\n      modal: false\n    };\n\n    this.openModal = () => this.setState({\n      modal: true\n    });\n\n    this.closeModal = () => this.setState({\n      modal: false\n    });\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.createMessage = (fileUrl = null) => {\n      const message = {\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n        user: {\n          id: this.state.user.uid,\n          name: this.state.user.displayName,\n          avatar: this.state.user.photoURL\n        }\n      };\n\n      if (fileUrl !== null) {\n        message[\"image\"] = fileUrl;\n      } else {\n        message[\"content\"] = this.state.message;\n      }\n\n      return message;\n    };\n\n    this.sendMessage = () => {\n      const {\n        getMessagesRef\n      } = this.props;\n      const {\n        message,\n        channel\n      } = this.state;\n\n      if (message) {\n        this.setState({\n          loading: true\n        });\n        getMessagesRef().child(channel.id).push().set(this.createMessage()).then(() => {\n          this.setState({\n            loading: false,\n            message: \"\",\n            errors: []\n          });\n        }).catch(err => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n      } else {\n        this.setState({\n          errors: this.state.errors.concat({\n            message: \"Add a message\"\n          })\n        });\n      }\n    };\n\n    this.getPath = () => {\n      if (this.props.isPrivateChannel) {\n        return `chat/private-${this.state.channel.id}`;\n      } else {\n        return \"chat/public\";\n      }\n    };\n\n    this.uploadFile = (file, metadata) => {\n      const pathToUpload = this.state.channel.id;\n      const ref = this.props.getMessagesRef();\n      const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\n      this.setState({\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      }, () => {\n        this.state.uploadTask.on(\"state_changed\", snap => {\n          const percentUploaded = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n          this.setState({\n            percentUploaded\n          });\n        }, err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            uploadState: \"error\",\n            uploadTask: null\n          });\n        }, () => {\n          this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadUrl => {\n            this.sendFileMessage(downloadUrl, ref, pathToUpload);\n          }).catch(err => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null\n            });\n          });\n        });\n      });\n    };\n\n    this.sendFileMessage = (fileUrl, ref, pathToUpload) => {\n      ref.child(pathToUpload).push().set(this.createMessage(fileUrl)).then(() => {\n        this.setState({\n          uploadState: \"done\"\n        });\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n    };\n  }\n\n  render() {\n    // prettier-ignore\n    const {\n      errors,\n      message,\n      loading,\n      modal,\n      uploadState,\n      percentUploaded\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      className: \"message__form\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        fluid: true,\n        name: \"message\",\n        onChange: this.handleChange,\n        value: message,\n        style: {\n          marginBottom: \"0.7em\"\n        },\n        label: /*#__PURE__*/_jsxDEV(Button, {\n          icon: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 18\n        }, this),\n        labelPosition: \"left\",\n        className: errors.some(error => error.message.includes(\"message\")) ? \"error\" : \"\",\n        placeholder: \"Write your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n        icon: true,\n        widths: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.sendMessage,\n          disabled: loading,\n          color: \"orange\",\n          content: \"Add Reply\",\n          labelPosition: \"left\",\n          icon: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"teal\",\n          disabled: uploadState === \"uploading\",\n          onClick: this.openModal,\n          content: \"Upload Media\",\n          labelPosition: \"right\",\n          icon: \"cloud upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileModal, {\n        modal: modal,\n        closeModal: this.closeModal,\n        uploadFile: this.uploadFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        uploadState: uploadState,\n        percentUploaded: percentUploaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MessageForm;","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/src/components/Messages/MessageForm.js"],"names":["React","uuidv4","firebase","Segment","Button","Input","FileModal","ProgressBar","MessageForm","Component","state","storageRef","storage","ref","uploadTask","uploadState","percentUploaded","message","channel","props","currentChannel","user","currentUser","loading","errors","modal","openModal","setState","closeModal","handleChange","event","target","name","value","createMessage","fileUrl","timestamp","database","ServerValue","TIMESTAMP","id","uid","displayName","avatar","photoURL","sendMessage","getMessagesRef","child","push","set","then","catch","err","console","error","concat","getPath","isPrivateChannel","uploadFile","file","metadata","pathToUpload","filePath","put","on","snap","Math","round","bytesTransferred","totalBytes","snapshot","getDownloadURL","downloadUrl","sendFileMessage","render","marginBottom","some","includes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport firebase from \"../../firebase\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\n\nimport FileModal from \"./FileModal\";\nimport ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  state = {\n    storageRef: firebase.storage().ref(),\n    uploadTask: null,\n    uploadState: \"\",\n    percentUploaded: 0,\n    message: \"\",\n    channel: this.props.currentChannel,\n    user: this.props.currentUser,\n    loading: false,\n    errors: [],\n    modal: false\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.state.user.uid,\n        name: this.state.user.displayName,\n        avatar: this.state.user.photoURL\n      }\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  sendMessage = () => {\n    const { getMessagesRef } = this.props;\n    const { message, channel } = this.state;\n\n    if (message) {\n      this.setState({ loading: true });\n      getMessagesRef()\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\", errors: [] });\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Add a message\" })\n      });\n    }\n  };\n\n  getPath = () => {\n    if (this.props.isPrivateChannel) {\n      return `chat/private-${this.state.channel.id}`;\n    } else {\n      return \"chat/public\";\n    }\n  };\n\n  uploadFile = (file, metadata) => {\n    const pathToUpload = this.state.channel.id;\n    const ref = this.props.getMessagesRef();\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snap => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({ percentUploaded });\n          },\n          err => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadUrl => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch(err => {\n                console.error(err);\n                this.setState({\n                  errors: this.state.errors.concat(err),\n                  uploadState: \"error\",\n                  uploadTask: null\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n  };\n\n  render() {\n    // prettier-ignore\n    const { errors, message, loading, modal, uploadState, percentUploaded } = this.state;\n\n    return (\n      <Segment className=\"message__form\">\n        <Input\n          fluid\n          name=\"message\"\n          onChange={this.handleChange}\n          value={message}\n          style={{ marginBottom: \"0.7em\" }}\n          label={<Button icon={\"add\"} />}\n          labelPosition=\"left\"\n          className={\n            errors.some(error => error.message.includes(\"message\"))\n              ? \"error\"\n              : \"\"\n          }\n          placeholder=\"Write your message\"\n        />\n        <Button.Group icon widths=\"2\">\n          <Button\n            onClick={this.sendMessage}\n            disabled={loading}\n            color=\"orange\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n          />\n          <Button\n            color=\"teal\"\n            disabled={uploadState === \"uploading\"}\n            onClick={this.openModal}\n            content=\"Upload Media\"\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n          />\n        </Button.Group>\n        <FileModal\n          modal={modal}\n          closeModal={this.closeModal}\n          uploadFile={this.uploadFile}\n        />\n        <ProgressBar\n          uploadState={uploadState}\n          percentUploaded={percentUploaded}\n        />\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n"]},"metadata":{},"sourceType":"module"}