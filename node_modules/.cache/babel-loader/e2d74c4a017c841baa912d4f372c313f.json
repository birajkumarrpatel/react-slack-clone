{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIRAJ\\\\Desktop\\\\helping-hand\\\\src\\\\components\\\\Messages\\\\Message.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isOwnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message__self\" : \"\";\n};\n\nconst isImage = message => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\n};\n\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\n\nconst Message = ({\n  message,\n  user\n}) => /*#__PURE__*/_jsxDEV(Comment, {\n  children: [/*#__PURE__*/_jsxDEV(Comment.Avatar, {\n    src: message.user.avatar\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Comment.Content, {\n    className: isOwnMessage(message, user),\n    children: [/*#__PURE__*/_jsxDEV(Comment.Author, {\n      as: \"a\",\n      children: message.user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comment.Metadata, {\n      children: timeFromNow(message.timestamp)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), isImage(message) ? /*#__PURE__*/_jsxDEV(Image, {\n      src: message.image,\n      className: \"message__image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Comment.Text, {\n      children: message.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/helping-hand/src/components/Messages/Message.js"],"names":["React","moment","Comment","Image","isOwnMessage","message","user","id","uid","isImage","hasOwnProperty","timeFromNow","timestamp","fromNow","Message","avatar","name","image","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,mBAA/B;;;AAEA,MAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACtC,SAAOD,OAAO,CAACC,IAAR,CAAaC,EAAb,KAAoBD,IAAI,CAACE,GAAzB,GAA+B,eAA/B,GAAiD,EAAxD;AACD,CAFD;;AAIA,MAAMC,OAAO,GAAGJ,OAAO,IAAI;AACzB,SAAOA,OAAO,CAACK,cAAR,CAAuB,OAAvB,KAAmC,CAACL,OAAO,CAACK,cAAR,CAAuB,SAAvB,CAA3C;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAGC,SAAS,IAAIX,MAAM,CAACW,SAAD,CAAN,CAAkBC,OAAlB,EAAjC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAET,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,kBACd,QAAC,OAAD;AAAA,0BACE,QAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,GAAG,EAAED,OAAO,CAACC,IAAR,CAAaS;AAAlC;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,OAAD,CAAS,OAAT;AAAiB,IAAA,SAAS,EAAEX,YAAY,CAACC,OAAD,EAAUC,IAAV,CAAxC;AAAA,4BACE,QAAC,OAAD,CAAS,MAAT;AAAgB,MAAA,EAAE,EAAC,GAAnB;AAAA,gBAAwBD,OAAO,CAACC,IAAR,CAAaU;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD,CAAS,QAAT;AAAA,gBAAmBL,WAAW,CAACN,OAAO,CAACO,SAAT;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGH,OAAO,CAACJ,OAAD,CAAP,gBACC,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,OAAO,CAACY,KAApB;AAA2B,MAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,OAAD,CAAS,IAAT;AAAA,gBAAeZ,OAAO,CAACa;AAAvB;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMJ,O;AAeN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\n\nconst isOwnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message__self\" : \"\";\n};\n\nconst isImage = message => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\n};\n\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\n\nconst Message = ({ message, user }) => (\n  <Comment>\n    <Comment.Avatar src={message.user.avatar} />\n    <Comment.Content className={isOwnMessage(message, user)}>\n      <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\n      <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n      {isImage(message) ? (\n        <Image src={message.image} className=\"message__image\" />\n      ) : (\n        <Comment.Text>{message.content}</Comment.Text>\n      )}\n    </Comment.Content>\n  </Comment>\n);\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}