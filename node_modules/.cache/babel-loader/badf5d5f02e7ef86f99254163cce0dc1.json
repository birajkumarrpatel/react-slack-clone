{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIRAJ\\\\Desktop\\\\helping-hand\\\\src\\\\components\\\\Auth\\\\Register.js\";\nimport React from \"react\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\nimport { Grid, Form, Segment, Button, Header, Message, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      errors: [],\n      loading: false,\n      usersRef: firebase.database().ref(\"users\")\n    };\n\n    this.isFormValid = () => {\n      let errors = [];\n      let error;\n\n      if (this.isFormEmpty(this.state)) {\n        error = {\n          message: \"Fill in all fields\"\n        };\n        this.setState({\n          errors: errors.concat(error)\n        });\n        return false;\n      } else if (!this.isPasswordValid(this.state)) {\n        error = {\n          message: \"Password is invalid\"\n        };\n        this.setState({\n          errors: errors.concat(error)\n        });\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.isFormEmpty = ({\n      username,\n      email,\n      password,\n      passwordConfirmation\n    }) => {\n      return !username.length || !email.length || !password.length || !passwordConfirmation.length;\n    };\n\n    this.isPasswordValid = ({\n      password,\n      passwordConfirmation\n    }) => {\n      if (password.length < 6 || passwordConfirmation.length < 6) {\n        return false;\n      } else if (password !== passwordConfirmation) {\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.displayErrors = errors => errors.map((error, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 30\n    }, this));\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.isFormValid()) {\n        this.setState({\n          errors: [],\n          loading: true\n        });\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(createdUser => {\n          console.log(createdUser);\n          createdUser.user.updateProfile({\n            displayName: this.state.username,\n            photoURL: `http://gravatar.com/avatar/${md5(createdUser.user.email)}?d=identicon`\n          }).then(() => {\n            this.saveUser(createdUser).then(() => {\n              console.log(\"user saved\");\n            });\n          }).catch(err => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              loading: false\n            });\n          });\n        }).catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n      }\n    };\n\n    this.saveUser = createdUser => {\n      return this.state.usersRef.child(createdUser.user.uid).set({\n        name: createdUser.user.displayName,\n        avatar: createdUser.user.photoURL\n      });\n    };\n\n    this.handleInputError = (errors, inputName) => {\n      return errors.some(error => error.message.toLowerCase().includes(inputName)) ? \"error\" : \"\";\n    };\n  }\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h1\",\n          icon: true,\n          color: \"orange\",\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"puzzle piece\",\n            color: \"orange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), \"Register for HelpingHand\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          size: \"large\",\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            stacked: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              name: \"username\",\n              icon: \"user\",\n              iconPosition: \"left\",\n              placeholder: \"Username\",\n              onChange: this.handleChange,\n              value: username,\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              name: \"email\",\n              icon: \"mail\",\n              iconPosition: \"left\",\n              placeholder: \"Email Address\",\n              onChange: this.handleChange,\n              value: email,\n              className: this.handleInputError(errors, \"email\"),\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              name: \"password\",\n              icon: \"lock\",\n              iconPosition: \"left\",\n              placeholder: \"Password\",\n              onChange: this.handleChange,\n              value: password,\n              className: this.handleInputError(errors, \"password\"),\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              name: \"passwordConfirmation\",\n              icon: \"repeat\",\n              iconPosition: \"left\",\n              placeholder: \"Password Confirmation\",\n              onChange: this.handleChange,\n              value: passwordConfirmation,\n              className: this.handleInputError(errors, \"password\"),\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loading,\n              className: loading ? \"loading\" : \"\",\n              color: \"orange\",\n              fluid: true,\n              size: \"large\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(Message, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), this.displayErrors(errors)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          children: [\"Already a user? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/helping-hand/src/components/Auth/Register.js"],"names":["React","firebase","md5","Grid","Form","Segment","Button","Header","Message","Icon","Link","Register","Component","state","username","email","password","passwordConfirmation","errors","loading","usersRef","database","ref","isFormValid","error","isFormEmpty","message","setState","concat","isPasswordValid","length","displayErrors","map","i","handleChange","event","target","name","value","handleSubmit","preventDefault","auth","createUserWithEmailAndPassword","then","createdUser","console","log","user","updateProfile","displayName","photoURL","saveUser","catch","err","child","uid","set","avatar","handleInputError","inputName","some","toLowerCase","includes","render","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,OANF,EAOEC,IAPF,QAQO,mBARP;AASA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,oBAAoB,EAAE,EAJhB;AAKNC,MAAAA,MAAM,EAAE,EALF;AAMNC,MAAAA,OAAO,EAAE,KANH;AAONC,MAAAA,QAAQ,EAAEnB,QAAQ,CAACoB,QAAT,GAAoBC,GAApB,CAAwB,OAAxB;AAPJ,KAD6B;;AAAA,SAWrCC,WAXqC,GAWvB,MAAM;AAClB,UAAIL,MAAM,GAAG,EAAb;AACA,UAAIM,KAAJ;;AAEA,UAAI,KAAKC,WAAL,CAAiB,KAAKZ,KAAtB,CAAJ,EAAkC;AAChCW,QAAAA,KAAK,GAAG;AAAEE,UAAAA,OAAO,EAAE;AAAX,SAAR;AACA,aAAKC,QAAL,CAAc;AAAET,UAAAA,MAAM,EAAEA,MAAM,CAACU,MAAP,CAAcJ,KAAd;AAAV,SAAd;AACA,eAAO,KAAP;AACD,OAJD,MAIO,IAAI,CAAC,KAAKK,eAAL,CAAqB,KAAKhB,KAA1B,CAAL,EAAuC;AAC5CW,QAAAA,KAAK,GAAG;AAAEE,UAAAA,OAAO,EAAE;AAAX,SAAR;AACA,aAAKC,QAAL,CAAc;AAAET,UAAAA,MAAM,EAAEA,MAAM,CAACU,MAAP,CAAcJ,KAAd;AAAV,SAAd;AACA,eAAO,KAAP;AACD,OAJM,MAIA;AACL,eAAO,IAAP;AACD;AACF,KA1BoC;;AAAA,SA4BrCC,WA5BqC,GA4BvB,CAAC;AAAEX,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA,QAAnB;AAA6BC,MAAAA;AAA7B,KAAD,KAAyD;AACrE,aACE,CAACH,QAAQ,CAACgB,MAAV,IACA,CAACf,KAAK,CAACe,MADP,IAEA,CAACd,QAAQ,CAACc,MAFV,IAGA,CAACb,oBAAoB,CAACa,MAJxB;AAMD,KAnCoC;;AAAA,SAqCrCD,eArCqC,GAqCnB,CAAC;AAAEb,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,KAAwC;AACxD,UAAID,QAAQ,CAACc,MAAT,GAAkB,CAAlB,IAAuBb,oBAAoB,CAACa,MAArB,GAA8B,CAAzD,EAA4D;AAC1D,eAAO,KAAP;AACD,OAFD,MAEO,IAAId,QAAQ,KAAKC,oBAAjB,EAAuC;AAC5C,eAAO,KAAP;AACD,OAFM,MAEA;AACL,eAAO,IAAP;AACD;AACF,KA7CoC;;AAAA,SA+CrCc,aA/CqC,GA+CrBb,MAAM,IACpBA,MAAM,CAACc,GAAP,CAAW,CAACR,KAAD,EAAQS,CAAR,kBAAc;AAAA,gBAAYT,KAAK,CAACE;AAAlB,OAAQO,CAAR;AAAA;AAAA;AAAA;AAAA,YAAzB,CAhDmC;;AAAA,SAkDrCC,YAlDqC,GAkDtBC,KAAK,IAAI;AACtB,WAAKR,QAAL,CAAc;AAAE,SAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAApC,OAAd;AACD,KApDoC;;AAAA,SAsDrCC,YAtDqC,GAsDtBJ,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACK,cAAN;;AACA,UAAI,KAAKjB,WAAL,EAAJ,EAAwB;AACtB,aAAKI,QAAL,CAAc;AAAET,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,OAAO,EAAE;AAAvB,SAAd;AACAlB,QAAAA,QAAQ,CACLwC,IADH,GAEGC,8BAFH,CAEkC,KAAK7B,KAAL,CAAWE,KAF7C,EAEoD,KAAKF,KAAL,CAAWG,QAF/D,EAGG2B,IAHH,CAGQC,WAAW,IAAI;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAA,UAAAA,WAAW,CAACG,IAAZ,CACGC,aADH,CACiB;AACbC,YAAAA,WAAW,EAAE,KAAKpC,KAAL,CAAWC,QADX;AAEboC,YAAAA,QAAQ,EAAG,8BAA6BhD,GAAG,CACzC0C,WAAW,CAACG,IAAZ,CAAiBhC,KADwB,CAEzC;AAJW,WADjB,EAOG4B,IAPH,CAOQ,MAAM;AACV,iBAAKQ,QAAL,CAAcP,WAAd,EAA2BD,IAA3B,CAAgC,MAAM;AACpCE,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,aAFD;AAGD,WAXH,EAYGM,KAZH,CAYSC,GAAG,IAAI;AACZR,YAAAA,OAAO,CAACrB,KAAR,CAAc6B,GAAd;AACA,iBAAK1B,QAAL,CAAc;AACZT,cAAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK,MAAX,CAAkBU,MAAlB,CAAyByB,GAAzB,CADI;AAEZlC,cAAAA,OAAO,EAAE;AAFG,aAAd;AAID,WAlBH;AAmBD,SAxBH,EAyBGiC,KAzBH,CAyBSC,GAAG,IAAI;AACZR,UAAAA,OAAO,CAACrB,KAAR,CAAc6B,GAAd;AACA,eAAK1B,QAAL,CAAc;AACZT,YAAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK,MAAX,CAAkBU,MAAlB,CAAyByB,GAAzB,CADI;AAEZlC,YAAAA,OAAO,EAAE;AAFG,WAAd;AAID,SA/BH;AAgCD;AACF,KA3FoC;;AAAA,SA6FrCgC,QA7FqC,GA6F1BP,WAAW,IAAI;AACxB,aAAO,KAAK/B,KAAL,CAAWO,QAAX,CAAoBkC,KAApB,CAA0BV,WAAW,CAACG,IAAZ,CAAiBQ,GAA3C,EAAgDC,GAAhD,CAAoD;AACzDnB,QAAAA,IAAI,EAAEO,WAAW,CAACG,IAAZ,CAAiBE,WADkC;AAEzDQ,QAAAA,MAAM,EAAEb,WAAW,CAACG,IAAZ,CAAiBG;AAFgC,OAApD,CAAP;AAID,KAlGoC;;AAAA,SAoGrCQ,gBApGqC,GAoGlB,CAACxC,MAAD,EAASyC,SAAT,KAAuB;AACxC,aAAOzC,MAAM,CAAC0C,IAAP,CAAYpC,KAAK,IAAIA,KAAK,CAACE,OAAN,CAAcmC,WAAd,GAA4BC,QAA5B,CAAqCH,SAArC,CAArB,IACH,OADG,GAEH,EAFJ;AAGD,KAxGoC;AAAA;;AA0GrCI,EAAAA,MAAM,GAAG;AACP,UAAM;AACJjD,MAAAA,QADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,oBAJI;AAKJC,MAAAA,MALI;AAMJC,MAAAA;AANI,QAOF,KAAKN,KAPT;AASA,wBACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,aAAa,EAAC,QAAvC;AAAgD,MAAA,SAAS,EAAC,KAA1D;AAAA,6BACE,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAAEmD,UAAAA,QAAQ,EAAE;AAAZ,SAApB;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,KAAK,EAAC,QAA3B;AAAoC,UAAA,SAAS,EAAC,QAA9C;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,cAAX;AAA0B,YAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,KAAKzB,YAArB;AAAmC,UAAA,IAAI,EAAC,OAAxC;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,OAAO,MAAhB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,KAAK,MADP;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,YAAY,EAAC,MAJf;AAKE,cAAA,WAAW,EAAC,UALd;AAME,cAAA,QAAQ,EAAE,KAAKL,YANjB;AAOE,cAAA,KAAK,EAAEpB,QAPT;AAQE,cAAA,IAAI,EAAC;AARP;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,KAAK,MADP;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,YAAY,EAAC,MAJf;AAKE,cAAA,WAAW,EAAC,eALd;AAME,cAAA,QAAQ,EAAE,KAAKoB,YANjB;AAOE,cAAA,KAAK,EAAEnB,KAPT;AAQE,cAAA,SAAS,EAAE,KAAK2C,gBAAL,CAAsBxC,MAAtB,EAA8B,OAA9B,CARb;AASE,cAAA,IAAI,EAAC;AATP;AAAA;AAAA;AAAA;AAAA,oBAZF,eAwBE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,KAAK,MADP;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,YAAY,EAAC,MAJf;AAKE,cAAA,WAAW,EAAC,UALd;AAME,cAAA,QAAQ,EAAE,KAAKgB,YANjB;AAOE,cAAA,KAAK,EAAElB,QAPT;AAQE,cAAA,SAAS,EAAE,KAAK0C,gBAAL,CAAsBxC,MAAtB,EAA8B,UAA9B,CARb;AASE,cAAA,IAAI,EAAC;AATP;AAAA;AAAA;AAAA;AAAA,oBAxBF,eAoCE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,KAAK,MADP;AAEE,cAAA,IAAI,EAAC,sBAFP;AAGE,cAAA,IAAI,EAAC,QAHP;AAIE,cAAA,YAAY,EAAC,MAJf;AAKE,cAAA,WAAW,EAAC,uBALd;AAME,cAAA,QAAQ,EAAE,KAAKgB,YANjB;AAOE,cAAA,KAAK,EAAEjB,oBAPT;AAQE,cAAA,SAAS,EAAE,KAAKyC,gBAAL,CAAsBxC,MAAtB,EAA8B,UAA9B,CARb;AASE,cAAA,IAAI,EAAC;AATP;AAAA;AAAA;AAAA;AAAA,oBApCF,eAgDE,QAAC,MAAD;AACE,cAAA,QAAQ,EAAEC,OADZ;AAEE,cAAA,SAAS,EAAEA,OAAO,GAAG,SAAH,GAAe,EAFnC;AAGE,cAAA,KAAK,EAAC,QAHR;AAIE,cAAA,KAAK,MAJP;AAKE,cAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,EAiEGD,MAAM,CAACY,MAAP,GAAgB,CAAhB,iBACC,QAAC,OAAD;AAAS,UAAA,KAAK,MAAd;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,KAAKC,aAAL,CAAmBb,MAAnB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlEJ,eAuEE,QAAC,OAAD;AAAA,sDACkB,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA+ED;;AAnMoC;;AAsMvC,eAAeP,QAAf","sourcesContent":["import React from \"react\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref(\"users\")\n  };\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: \"Fill in all fields\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      error = { message: \"Password is invalid\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !passwordConfirmation.length\n    );\n  };\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    if (password.length < 6 || passwordConfirmation.length < 6) {\n      return false;\n    } else if (password !== passwordConfirmation) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid()) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then(createdUser => {\n          console.log(createdUser);\n          createdUser.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `http://gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              this.saveUser(createdUser).then(() => {\n                console.log(\"user saved\");\n              });\n            })\n            .catch(err => {\n              console.error(err);\n              this.setState({\n                errors: this.state.errors.concat(err),\n                loading: false\n              });\n            });\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  saveUser = createdUser => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      loading\n    } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"orange\" textAlign=\"center\">\n            <Icon name=\"puzzle piece\" color=\"orange\" />\n            Register for HelpingHand\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"username\"\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                onChange={this.handleChange}\n                value={username}\n                type=\"text\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"passwordConfirmation\"\n                icon=\"repeat\"\n                iconPosition=\"left\"\n                placeholder=\"Password Confirmation\"\n                onChange={this.handleChange}\n                value={passwordConfirmation}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"orange\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Already a user? <Link to=\"/login\">Login</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}