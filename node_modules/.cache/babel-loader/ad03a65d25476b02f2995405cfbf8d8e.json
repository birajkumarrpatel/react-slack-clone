{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIRAJ\\\\Desktop\\\\react-slack-clone\\\\src\\\\components\\\\ColorPanel\\\\ColorPanel.js\";\nimport React from \"react\";\nimport { Sidebar, Menu, Divider, Button, Modal, Icon, Label, Segment } from \"semantic-ui-react\";\nimport { sliderPicker } from \"react-color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ColorPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      primary: \"\",\n      secondary: \"\"\n    };\n\n    this.handleChangePrimary = color => this.setState({\n      primary: color.hex\n    });\n\n    this.handleChangeSecondary = color => this.setState({\n      secondary: color.hex\n    });\n\n    this.openModal = () => this.setState({\n      modal: true\n    });\n\n    this.closeModal = () => this.setState({\n      modal: false\n    });\n  }\n\n  render() {\n    const {\n      modal\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Sidebar, {\n      as: Menu,\n      icon: \"labeled\",\n      inverted: true,\n      vertical: true,\n      visible: true,\n      width: \"very thin\",\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"add\",\n        size: \"small\",\n        color: \"blue\",\n        onClick: this.openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        basic: true,\n        open: modal,\n        onClose: this.closeModal,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Choose App Colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Segment, {\n            inverted: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              content: \"Primary Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SliderPicker, {\n              onChange: handleChangePrimary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Segment, {\n            inverted: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              content: \"Secondary Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SliderPicker, {\n              onChange: handleChangeSecondary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"green\",\n            inverted: true,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"checkmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), \" Save Colors\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            inverted: true,\n            onClick: this.closeModal,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"checkmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), \" Cancel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ColorPanel;","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/src/components/ColorPanel/ColorPanel.js"],"names":["React","Sidebar","Menu","Divider","Button","Modal","Icon","Label","Segment","sliderPicker","ColorPanel","Component","state","modal","primary","secondary","handleChangePrimary","color","setState","hex","handleChangeSecondary","openModal","closeModal","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Sidebar, Menu, Divider, Button, Modal, Icon, Label, Segment } from \"semantic-ui-react\";\nimport { sliderPicker } from \"react-color\";\n\nclass ColorPanel extends React.Component {\n  state = {\n    modal: false,\n    primary: \"\",\n    secondary: \"\"\n  };\n\n  handleChangePrimary = color => this.setState({ primary: color.hex});\n\n  handleChangeSecondary = color => this.setState({ secondary: color.hex});\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { modal } = this.state;\n\n    return (\n      <Sidebar\n        as={Menu}\n        icon=\"labeled\"\n        inverted\n        vertical\n        visible\n        width=\"very thin\"\n      >\n        <Divider />\n        <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={this.openModal} />\n\n        {/* color picker Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Choose App Colors</Modal.Header>\n          <Modal.Content>\n            <Segment inverted>\n              <Label content=\"Primary Color\" />\n              <SliderPicker onChange={handleChangePrimary}/>\n            </Segment>\n            <Segment inverted>\n              <Label content=\"Secondary Color\" />\n              <SliderPicker onChange={handleChangeSecondary}/>    \n            </Segment>     \n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"green\" inverted>\n              <Icon name=\"checkmark\" /> Save Colors\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"checkmark\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Sidebar>\n    );\n  }\n}\n\nexport default ColorPanel;\n"]},"metadata":{},"sourceType":"module"}