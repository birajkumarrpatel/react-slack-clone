{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIRAJ\\\\Desktop\\\\react-slack-clone\\\\src\\\\components\\\\Messages\\\\MessageForm.js\";\nimport React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport firebase from \"../../firebase\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport FileModal from \"./FileModal\";\nimport ProgressBar from \"./ProgressBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MessageForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      storageRef: firebase.storage().ref(),\n      typingRef: firebase.database().ref(\"typing\"),\n      uploadTask: null,\n      uploadState: \"\",\n      percentUploaded: 0,\n      message: \"\",\n      channel: this.props.currentChannel,\n      user: this.props.currentUser,\n      loading: false,\n      errors: [],\n      modal: false\n    };\n\n    this.openModal = () => this.setState({\n      modal: true\n    });\n\n    this.closeModal = () => this.setState({\n      modal: false\n    });\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleKeyDown = () => {\n      const {\n        message,\n        typingRef,\n        channel,\n        user\n      } = this.state;\n\n      if (message) {\n        typingRef.child(channel.id).child(user.uid).set(user.displayName);\n      } else {\n        typingRef.child(channel.id).child(user.uid).remove();\n      }\n    };\n\n    this.createMessage = (fileUrl = null) => {\n      const message = {\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n        user: {\n          id: this.state.user.uid,\n          name: this.state.user.displayName,\n          avatar: this.state.user.photoURL\n        }\n      };\n\n      if (fileUrl !== null) {\n        message[\"image\"] = fileUrl;\n      } else {\n        message[\"content\"] = this.state.message;\n      }\n\n      return message;\n    };\n\n    this.sendMessage = () => {\n      const {\n        getMessagesRef\n      } = this.props;\n      const {\n        message,\n        channel,\n        user,\n        typingRef\n      } = this.state;\n\n      if (message) {\n        this.setState({\n          loading: true\n        });\n        getMessagesRef().child(channel.id).push().set(this.createMessage()).then(() => {\n          this.setState({\n            loading: false,\n            message: \"\",\n            errors: []\n          });\n          typingRef.child(channel.id).child(user.uid).remove();\n        }).catch(err => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n      } else {\n        this.setState({\n          errors: this.state.errors.concat({\n            message: \"Add a message\"\n          })\n        });\n      }\n    };\n\n    this.getPath = () => {\n      if (this.props.isPrivateChannel) {\n        return `chat/private-${this.state.channel.id}`;\n      } else {\n        return \"chat/public\";\n      }\n    };\n\n    this.uploadFile = (file, metadata) => {\n      const pathToUpload = this.state.channel.id;\n      const ref = this.props.getMessagesRef();\n      const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\n      this.setState({\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      }, () => {\n        this.state.uploadTask.on(\"state_changed\", snap => {\n          const percentUploaded = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n          this.setState({\n            percentUploaded\n          });\n        }, err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            uploadState: \"error\",\n            uploadTask: null\n          });\n        }, () => {\n          this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadUrl => {\n            this.sendFileMessage(downloadUrl, ref, pathToUpload);\n          }).catch(err => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null\n            });\n          });\n        });\n      });\n    };\n\n    this.sendFileMessage = (fileUrl, ref, pathToUpload) => {\n      ref.child(pathToUpload).push().set(this.createMessage(fileUrl)).then(() => {\n        this.setState({\n          uploadState: \"done\"\n        });\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n    };\n  }\n\n  render() {\n    // prettier-ignore\n    const {\n      errors,\n      message,\n      loading,\n      modal,\n      uploadState,\n      percentUploaded\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      className: \"message__form\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        fluid: true,\n        name: \"message\",\n        onChange: this.handleChange,\n        onKeyDown: this.handleKeyDown,\n        value: message,\n        style: {\n          marginBottom: \"0.7em\"\n        },\n        label: /*#__PURE__*/_jsxDEV(Button, {\n          icon: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 18\n        }, this),\n        labelPosition: \"left\",\n        className: errors.some(error => error.message.includes(\"message\")) ? \"error\" : \"\",\n        placeholder: \"Write your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n        icon: true,\n        widths: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.sendMessage,\n          disabled: loading,\n          color: \"orange\",\n          content: \"Add Reply\",\n          labelPosition: \"left\",\n          icon: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"teal\",\n          disabled: uploadState === \"uploading\",\n          onClick: this.openModal,\n          content: \"Upload Media\",\n          labelPosition: \"right\",\n          icon: \"cloud upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileModal, {\n        modal: modal,\n        closeModal: this.closeModal,\n        uploadFile: this.uploadFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        uploadState: uploadState,\n        percentUploaded: percentUploaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MessageForm;","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/src/components/Messages/MessageForm.js"],"names":["React","uuidv4","firebase","Segment","Button","Input","FileModal","ProgressBar","MessageForm","Component","state","storageRef","storage","ref","typingRef","database","uploadTask","uploadState","percentUploaded","message","channel","props","currentChannel","user","currentUser","loading","errors","modal","openModal","setState","closeModal","handleChange","event","target","name","value","handleKeyDown","child","id","uid","set","displayName","remove","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","avatar","photoURL","sendMessage","getMessagesRef","push","then","catch","err","console","error","concat","getPath","isPrivateChannel","uploadFile","file","metadata","pathToUpload","filePath","put","on","snap","Math","round","bytesTransferred","totalBytes","snapshot","getDownloadURL","downloadUrl","sendFileMessage","render","marginBottom","some","includes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport firebase from \"../../firebase\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\n\nimport FileModal from \"./FileModal\";\nimport ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  state = {\n    storageRef: firebase.storage().ref(),\n    typingRef: firebase.database().ref(\"typing\"),\n    uploadTask: null,\n    uploadState: \"\",\n    percentUploaded: 0,\n    message: \"\",\n    channel: this.props.currentChannel,\n    user: this.props.currentUser,\n    loading: false,\n    errors: [],\n    modal: false\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleKeyDown = () => {\n    const { message, typingRef, channel, user } = this.state;\n    if(message) {\n      typingRef\n        .child(channel.id)\n        .child(user.uid)\n        .set(user.displayName);\n    } else {\n        typingRef\n          .child(channel.id)\n          .child(user.uid)\n          .remove();\n    }\n  };\n\n  createMessage = (fileUrl = null) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.state.user.uid,\n        name: this.state.user.displayName,\n        avatar: this.state.user.photoURL\n      }\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  sendMessage = () => {\n    const { getMessagesRef } = this.props;\n    const { message, channel, user, typingRef } = this.state;\n\n    if (message) {\n      this.setState({ loading: true });\n      getMessagesRef()\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\", errors: [] });\n          typingRef\n            .child(channel.id)\n            .child(user.uid)\n            .remove();\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Add a message\" })\n      });\n    }\n  };\n\n  getPath = () => {\n    if (this.props.isPrivateChannel) {\n      return `chat/private-${this.state.channel.id}`;\n    } else {\n      return \"chat/public\";\n    }\n  };\n\n  uploadFile = (file, metadata) => {\n    const pathToUpload = this.state.channel.id;\n    const ref = this.props.getMessagesRef();\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snap => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({ percentUploaded });\n          },\n          err => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadUrl => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch(err => {\n                console.error(err);\n                this.setState({\n                  errors: this.state.errors.concat(err),\n                  uploadState: \"error\",\n                  uploadTask: null\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n  };\n\n  render() {\n    // prettier-ignore\n    const { errors, message, loading, modal, uploadState, percentUploaded } = this.state;\n\n    return (\n      <Segment className=\"message__form\">\n        <Input\n          fluid\n          name=\"message\"\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}\n          value={message}\n          style={{ marginBottom: \"0.7em\" }}\n          label={<Button icon={\"add\"} />}\n          labelPosition=\"left\"\n          className={\n            errors.some(error => error.message.includes(\"message\"))\n              ? \"error\"\n              : \"\"\n          }\n          placeholder=\"Write your message\"\n        />\n        <Button.Group icon widths=\"2\">\n          <Button\n            onClick={this.sendMessage}\n            disabled={loading}\n            color=\"orange\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n          />\n          <Button\n            color=\"teal\"\n            disabled={uploadState === \"uploading\"}\n            onClick={this.openModal}\n            content=\"Upload Media\"\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n          />\n        </Button.Group>\n        <FileModal\n          modal={modal}\n          closeModal={this.closeModal}\n          uploadFile={this.uploadFile}\n        />\n        <ProgressBar\n          uploadState={uploadState}\n          percentUploaded={percentUploaded}\n        />\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n"]},"metadata":{},"sourceType":"module"}