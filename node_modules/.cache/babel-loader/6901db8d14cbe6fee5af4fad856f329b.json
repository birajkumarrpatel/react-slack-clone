{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIRAJ\\\\Desktop\\\\helping-hand\\\\src\\\\components\\\\Messages\\\\FileModal.js\";\nimport React from \"react\";\nimport mime from \"mime-types\";\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FileModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      file: null,\n      authorized: [\"image/jpeg\", \"image/png\"]\n    };\n\n    this.addFile = event => {\n      const file = event.target.files[0];\n\n      if (file) {\n        this.setState({\n          file\n        });\n      }\n    };\n\n    this.sendFile = () => {\n      const {\n        file\n      } = this.state;\n      const {\n        uploadFile,\n        closeModal\n      } = this.props;\n\n      if (file !== null) {\n        if (this.isAuthorized(file.name)) {\n          const metadata = {\n            contentType: mime.lookup(file.name)\n          };\n          uploadFile(file, metadata);\n          closeModal();\n          this.clearFile();\n        }\n      }\n    };\n\n    this.isAuthorized = filename => this.state.authorized.includes(mime.lookup(filename));\n\n    this.clearFile = () => this.setState({\n      file: null\n    });\n  }\n\n  render() {\n    const {\n      modal,\n      closeModal\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      basic: true,\n      open: modal,\n      onClose: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Select an Image File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          onChange: this.addFile,\n          fluid: true,\n          label: \"File types: jpg, png\",\n          name: \"file\",\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.sendFile,\n          color: \"green\",\n          inverted: true,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), \" Send\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          inverted: true,\n          onClick: closeModal,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), \" Cancel\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FileModal;","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/helping-hand/src/components/Messages/FileModal.js"],"names":["React","mime","Modal","Input","Button","Icon","FileModal","Component","state","file","authorized","addFile","event","target","files","setState","sendFile","uploadFile","closeModal","props","isAuthorized","name","metadata","contentType","lookup","clearFile","filename","includes","render","modal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport mime from \"mime-types\";\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\n\nclass FileModal extends React.Component {\n  state = {\n    file: null,\n    authorized: [\"image/jpeg\", \"image/png\"]\n  };\n\n  addFile = event => {\n    const file = event.target.files[0];\n    if (file) {\n      this.setState({ file });\n    }\n  };\n\n  sendFile = () => {\n    const { file } = this.state;\n    const { uploadFile, closeModal } = this.props;\n\n    if (file !== null) {\n      if (this.isAuthorized(file.name)) {\n        const metadata = { contentType: mime.lookup(file.name) };\n        uploadFile(file, metadata);\n        closeModal();\n        this.clearFile();\n      }\n    }\n  };\n\n  isAuthorized = filename =>\n    this.state.authorized.includes(mime.lookup(filename));\n\n  clearFile = () => this.setState({ file: null });\n\n  render() {\n    const { modal, closeModal } = this.props;\n\n    return (\n      <Modal basic open={modal} onClose={closeModal}>\n        <Modal.Header>Select an Image File</Modal.Header>\n        <Modal.Content>\n          <Input\n            onChange={this.addFile}\n            fluid\n            label=\"File types: jpg, png\"\n            name=\"file\"\n            type=\"file\"\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.sendFile} color=\"green\" inverted>\n            <Icon name=\"checkmark\" /> Send\n          </Button>\n          <Button color=\"red\" inverted onClick={closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default FileModal;\n"]},"metadata":{},"sourceType":"module"}