{"ast":null,"code":"import React from\"react\";import{Grid}from\"semantic-ui-react\";import\"./App.css\";import{connect}from\"react-redux\";import ColorPanel from\"./ColorPanel/ColorPanel\";import SidePanel from\"./SidePanel/SidePanel\";import Messages from\"./Messages/Messages\";import MetaPanel from\"./MetaPanel/MetaPanel\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(_ref){var currentUser=_ref.currentUser,currentChannel=_ref.currentChannel,isPrivateChannel=_ref.isPrivateChannel,userPosts=_ref.userPosts;return/*#__PURE__*/_jsxs(Grid,{columns:\"equal\",className:\"app\",style:{background:\"#eee\"},children:[/*#__PURE__*/_jsx(ColorPanel,{}),/*#__PURE__*/_jsx(SidePanel,{currentUser:currentUser},currentUser&&currentUser.uid),/*#__PURE__*/_jsx(Grid.Column,{style:{marginLeft:320},children:/*#__PURE__*/_jsx(Messages,{currentChannel:currentChannel,currentUser:currentUser,isPrivateChannel:isPrivateChannel},currentChannel&&currentChannel.id)}),/*#__PURE__*/_jsx(Grid.Column,{width:4,children:/*#__PURE__*/_jsx(MetaPanel,{userPosts:userPosts,currentChannel:currentChannel,isPrivateChannel:isPrivateChannel},currentChannel&&currentChannel.id)})]});};var mapStateToProps=function mapStateToProps(state){return{currentUser:state.user.currentUser,currentChannel:state.channel.currentChannel,isPrivateChannel:state.channel.isPrivateChannel,userPosts:state.channel.userPosts};};export default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/src/components/App.js"],"names":["React","Grid","connect","ColorPanel","SidePanel","Messages","MetaPanel","App","currentUser","currentChannel","isPrivateChannel","userPosts","background","uid","marginLeft","id","mapStateToProps","state","user","channel"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,MAAO,WAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,UAAGC,CAAAA,WAAH,MAAGA,WAAH,CAAgBC,cAAhB,MAAgBA,cAAhB,CAAgCC,gBAAhC,MAAgCA,gBAAhC,CAAkDC,SAAlD,MAAkDA,SAAlD,oBACV,MAAC,IAAD,EAAM,OAAO,CAAC,OAAd,CAAsB,SAAS,CAAC,KAAhC,CAAsC,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAA7C,wBACE,KAAC,UAAD,IADF,cAEE,KAAC,SAAD,EAAgD,WAAW,CAAEJ,WAA7D,EAAgBA,WAAW,EAAIA,WAAW,CAACK,GAA3C,CAFF,cAIE,KAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAAEC,UAAU,CAAE,GAAd,CAApB,uBACE,KAAC,QAAD,EAEE,cAAc,CAAEL,cAFlB,CAGE,WAAW,CAAED,WAHf,CAIE,gBAAgB,CAAEE,gBAJpB,EACOD,cAAc,EAAIA,cAAc,CAACM,EADxC,CADF,EAJF,cAaE,KAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAApB,uBACE,KAAC,SAAD,EAEE,SAAS,CAAEJ,SAFb,CAGE,cAAc,CAAEF,cAHlB,CAIE,gBAAgB,CAAEC,gBAJpB,EACOD,cAAc,EAAIA,cAAc,CAACM,EADxC,CADF,EAbF,GADU,EAAZ,CAyBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCT,WAAW,CAAES,KAAK,CAACC,IAAN,CAAWV,WADQ,CAEhCC,cAAc,CAAEQ,KAAK,CAACE,OAAN,CAAcV,cAFE,CAGhCC,gBAAgB,CAAEO,KAAK,CAACE,OAAN,CAAcT,gBAHA,CAIhCC,SAAS,CAAEM,KAAK,CAACE,OAAN,CAAcR,SAJO,CAAL,EAA7B,CAOA,cAAeT,CAAAA,OAAO,CAACc,eAAD,CAAP,CAAyBT,GAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\n\nimport ColorPanel from \"./ColorPanel/ColorPanel\";\nimport SidePanel from \"./SidePanel/SidePanel\";\nimport Messages from \"./Messages/Messages\";\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\n\nconst App = ({ currentUser, currentChannel, isPrivateChannel, userPosts }) => (\n  <Grid columns=\"equal\" className=\"app\" style={{ background: \"#eee\" }}>\n    <ColorPanel />\n    <SidePanel key={currentUser && currentUser.uid} currentUser={currentUser} />\n\n    <Grid.Column style={{ marginLeft: 320 }}>\n      <Messages\n        key={currentChannel && currentChannel.id}\n        currentChannel={currentChannel}\n        currentUser={currentUser}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n\n    <Grid.Column width={4}>\n      <MetaPanel\n        key={currentChannel && currentChannel.id}\n        userPosts={userPosts}\n        currentChannel={currentChannel  } \n        isPrivateChannel={isPrivateChannel} \n      />\n    </Grid.Column>\n  </Grid>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n  userPosts: state.channel.userPosts\n});\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}