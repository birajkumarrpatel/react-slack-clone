{"ast":null,"code":"import _classCallCheck from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import ReactDOM from\"react-dom\";import App from\"./components/App\";import Login from\"./components/Auth/Login\";import Register from\"./components/Auth/Register\";import Spinner from\"./Spinner\";import registerServiceWorker from\"./registerServiceWorker\";import firebase from\"./firebase\";import\"semantic-ui-css/semantic.min.css\";import{BrowserRouter as Router,Switch,Route,withRouter}from\"react-router-dom\";import{createStore}from\"redux\";import{Provider,connect}from\"react-redux\";import{composeWithDevTools}from\"redux-devtools-extension\";import rootReducer from\"./reducers\";import{setUser,clearUser}from\"./actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var store=createStore(rootReducer,composeWithDevTools());var Root=/*#__PURE__*/function(_React$Component){_inherits(Root,_React$Component);var _super=_createSuper(Root);function Root(){_classCallCheck(this,Root);return _super.apply(this,arguments);}_createClass(Root,[{key:\"componentDidMount\",value:function componentDidMount(){var _this=this;firebase.auth().onAuthStateChanged(function(user){if(user){// console.log(user);\n_this.props.setUser(user);_this.props.history.push(\"/\");}else{_this.props.history.push(\"/login\");_this.props.clearUser();}});}},{key:\"render\",value:function render(){return this.props.isLoading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:App}),/*#__PURE__*/_jsx(Route,{path:\"/login\",component:Login}),/*#__PURE__*/_jsx(Route,{path:\"/register\",component:Register})]});}}]);return Root;}(React.Component);var mapStateFromProps=function mapStateFromProps(state){return{isLoading:state.user.isLoading};};var RootWithAuth=withRouter(connect(mapStateFromProps,{setUser:setUser,clearUser:clearUser})(Root));ReactDOM.render(/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(RootWithAuth,{})})}),document.getElementById(\"root\"));registerServiceWorker();","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/src/index.js"],"names":["React","ReactDOM","App","Login","Register","Spinner","registerServiceWorker","firebase","BrowserRouter","Router","Switch","Route","withRouter","createStore","Provider","connect","composeWithDevTools","rootReducer","setUser","clearUser","store","Root","auth","onAuthStateChanged","user","props","history","push","isLoading","Component","mapStateFromProps","state","RootWithAuth","render","document","getElementById"],"mappings":"4mBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,MAAO,kCAAP,CAEA,OACEC,aAAa,GAAIC,CAAAA,MADnB,CAEEC,MAFF,CAGEC,KAHF,CAIEC,UAJF,KAKO,kBALP,CAOA,OAASC,WAAT,KAA4B,OAA5B,CACA,OAASC,QAAT,CAAmBC,OAAnB,KAAkC,aAAlC,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,WAAP,KAAwB,YAAxB,CACA,OAASC,OAAT,CAAkBC,SAAlB,KAAmC,WAAnC,C,wFAEA,GAAMC,CAAAA,KAAK,CAAGP,WAAW,CAACI,WAAD,CAAcD,mBAAmB,EAAjC,CAAzB,C,GAEMK,CAAAA,I,0OACJ,4BAAoB,gBAClBd,QAAQ,CAACe,IAAT,GAAgBC,kBAAhB,CAAmC,SAAAC,IAAI,CAAI,CACzC,GAAIA,IAAJ,CAAU,CACR;AACA,KAAI,CAACC,KAAL,CAAWP,OAAX,CAAmBM,IAAnB,EACA,KAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,EACD,CAJD,IAIO,CACL,KAAI,CAACF,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EACA,KAAI,CAACF,KAAL,CAAWN,SAAX,GACD,CACF,CATD,EAUD,C,sBAED,iBAAS,CACP,MAAO,MAAKM,KAAL,CAAWG,SAAX,cACL,KAAC,OAAD,IADK,cAGL,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAE1B,GAAjC,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAEC,KAAhC,EAFF,cAGE,KAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,SAAS,CAAEC,QAAnC,EAHF,GAHF,CASD,C,kBAxBgBJ,KAAK,CAAC6B,S,EA2BzB,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,KAAK,QAAK,CAClCH,SAAS,CAAEG,KAAK,CAACP,IAAN,CAAWI,SADY,CAAL,EAA/B,CAIA,GAAMI,CAAAA,YAAY,CAAGpB,UAAU,CAC7BG,OAAO,CACLe,iBADK,CAEL,CAAEZ,OAAO,CAAPA,OAAF,CAAWC,SAAS,CAATA,SAAX,CAFK,CAAP,CAGEE,IAHF,CAD6B,CAA/B,CAOApB,QAAQ,CAACgC,MAAT,cACE,KAAC,QAAD,EAAU,KAAK,CAAEb,KAAjB,uBACE,KAAC,MAAD,wBACE,KAAC,YAAD,IADF,EADF,EADF,CAMEc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,EAQA7B,qBAAqB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Spinner from \"./Spinner\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport firebase from \"./firebase\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\n\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport { setUser, clearUser } from \"./actions\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // console.log(user);\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.history.push(\"/login\");\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateFromProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nconst RootWithAuth = withRouter(\n  connect(\n    mapStateFromProps,\n    { setUser, clearUser }\n  )(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}