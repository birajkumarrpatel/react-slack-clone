{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar EventSet = /*#__PURE__*/function () {\n  /**\n   * @param {Function[]} eventHandlers\n   */\n  function EventSet(eventHandlers) {\n    _classCallCheck(this, EventSet);\n    /** @private {Set<Function>} handlers */\n\n\n    this.handlers = new Set(eventHandlers);\n  }\n  /**\n   * @param {Function[]} eventHandlers\n   * @return {EventSet}\n   */\n\n\n  _createClass(EventSet, [{\n    key: \"addHandlers\",\n    value: function addHandlers(eventHandlers) {\n      var handlerSet = new Set(this.handlers);\n      eventHandlers.forEach(function (eventHandler) {\n        // Heads up!\n        // We should delete a handler from the set, otherwise it will be not the last element in the\n        // set.\n        handlerSet.delete(eventHandler);\n        handlerSet.add(eventHandler);\n      });\n      return new EventSet(handlerSet);\n    }\n    /**\n     * @param {Event} event\n     * @param {Boolean} dispatchAll\n     */\n\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event, dispatchAll) {\n      if (dispatchAll) {\n        this.handlers.forEach(function (handler) {\n          handler(event);\n        });\n        return;\n      }\n\n      var recentHandler = _toConsumableArray(this.handlers).pop();\n\n      recentHandler(event);\n    }\n    /**\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"hasHandlers\",\n    value: function hasHandlers() {\n      return this.handlers.size > 0;\n    }\n    /**\n     * @param {Function[]} eventHandlers\n     * @return {EventSet}\n     */\n\n  }, {\n    key: \"removeHandlers\",\n    value: function removeHandlers(eventHandlers) {\n      var handlerSet = new Set(this.handlers);\n      eventHandlers.forEach(function (eventHandler) {\n        handlerSet.delete(eventHandler);\n      });\n      return new EventSet(handlerSet);\n    }\n  }]);\n\n  return EventSet;\n}();\n\nexport { EventSet as default };","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/semantic-ui-react/dist/es/lib/eventStack/EventSet.js"],"names":["_toConsumableArray","_classCallCheck","_createClass","EventSet","eventHandlers","handlers","Set","key","value","addHandlers","handlerSet","forEach","eventHandler","delete","add","dispatchEvent","event","dispatchAll","handler","recentHandler","pop","hasHandlers","size","removeHandlers","default"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAEA,IAAIC,QAAQ,GACZ,aACA,YAAY;AACV;AACF;AACA;AACE,WAASA,QAAT,CAAkBC,aAAlB,EAAiC;AAC/BH,IAAAA,eAAe,CAAC,IAAD,EAAOE,QAAP,CAAf;AAEA;;;AACA,SAAKE,QAAL,GAAgB,IAAIC,GAAJ,CAAQF,aAAR,CAAhB;AACD;AACD;AACF;AACA;AACA;;;AAGEF,EAAAA,YAAY,CAACC,QAAD,EAAW,CAAC;AACtBI,IAAAA,GAAG,EAAE,aADiB;AAEtBC,IAAAA,KAAK,EAAE,SAASC,WAAT,CAAqBL,aAArB,EAAoC;AACzC,UAAIM,UAAU,GAAG,IAAIJ,GAAJ,CAAQ,KAAKD,QAAb,CAAjB;AACAD,MAAAA,aAAa,CAACO,OAAd,CAAsB,UAAUC,YAAV,EAAwB;AAC5C;AACA;AACA;AACAF,QAAAA,UAAU,CAACG,MAAX,CAAkBD,YAAlB;AACAF,QAAAA,UAAU,CAACI,GAAX,CAAeF,YAAf;AACD,OAND;AAOA,aAAO,IAAIT,QAAJ,CAAaO,UAAb,CAAP;AACD;AACD;AACJ;AACA;AACA;;AAhB0B,GAAD,EAkBpB;AACDH,IAAAA,GAAG,EAAE,eADJ;AAEDC,IAAAA,KAAK,EAAE,SAASO,aAAT,CAAuBC,KAAvB,EAA8BC,WAA9B,EAA2C;AAChD,UAAIA,WAAJ,EAAiB;AACf,aAAKZ,QAAL,CAAcM,OAAd,CAAsB,UAAUO,OAAV,EAAmB;AACvCA,UAAAA,OAAO,CAACF,KAAD,CAAP;AACD,SAFD;AAGA;AACD;;AAED,UAAIG,aAAa,GAAGnB,kBAAkB,CAAC,KAAKK,QAAN,CAAlB,CAAkCe,GAAlC,EAApB;;AAEAD,MAAAA,aAAa,CAACH,KAAD,CAAb;AACD;AACD;AACJ;AACA;;AAhBK,GAlBoB,EAoCpB;AACDT,IAAAA,GAAG,EAAE,aADJ;AAEDC,IAAAA,KAAK,EAAE,SAASa,WAAT,GAAuB;AAC5B,aAAO,KAAKhB,QAAL,CAAciB,IAAd,GAAqB,CAA5B;AACD;AACD;AACJ;AACA;AACA;;AARK,GApCoB,EA8CpB;AACDf,IAAAA,GAAG,EAAE,gBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASe,cAAT,CAAwBnB,aAAxB,EAAuC;AAC5C,UAAIM,UAAU,GAAG,IAAIJ,GAAJ,CAAQ,KAAKD,QAAb,CAAjB;AACAD,MAAAA,aAAa,CAACO,OAAd,CAAsB,UAAUC,YAAV,EAAwB;AAC5CF,QAAAA,UAAU,CAACG,MAAX,CAAkBD,YAAlB;AACD,OAFD;AAGA,aAAO,IAAIT,QAAJ,CAAaO,UAAb,CAAP;AACD;AARA,GA9CoB,CAAX,CAAZ;;AAyDA,SAAOP,QAAP;AACD,CA1ED,EAFA;;AA8EA,SAASA,QAAQ,IAAIqB,OAArB","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar EventSet =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {Function[]} eventHandlers\n   */\n  function EventSet(eventHandlers) {\n    _classCallCheck(this, EventSet);\n\n    /** @private {Set<Function>} handlers */\n    this.handlers = new Set(eventHandlers);\n  }\n  /**\n   * @param {Function[]} eventHandlers\n   * @return {EventSet}\n   */\n\n\n  _createClass(EventSet, [{\n    key: \"addHandlers\",\n    value: function addHandlers(eventHandlers) {\n      var handlerSet = new Set(this.handlers);\n      eventHandlers.forEach(function (eventHandler) {\n        // Heads up!\n        // We should delete a handler from the set, otherwise it will be not the last element in the\n        // set.\n        handlerSet.delete(eventHandler);\n        handlerSet.add(eventHandler);\n      });\n      return new EventSet(handlerSet);\n    }\n    /**\n     * @param {Event} event\n     * @param {Boolean} dispatchAll\n     */\n\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event, dispatchAll) {\n      if (dispatchAll) {\n        this.handlers.forEach(function (handler) {\n          handler(event);\n        });\n        return;\n      }\n\n      var recentHandler = _toConsumableArray(this.handlers).pop();\n\n      recentHandler(event);\n    }\n    /**\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"hasHandlers\",\n    value: function hasHandlers() {\n      return this.handlers.size > 0;\n    }\n    /**\n     * @param {Function[]} eventHandlers\n     * @return {EventSet}\n     */\n\n  }, {\n    key: \"removeHandlers\",\n    value: function removeHandlers(eventHandlers) {\n      var handlerSet = new Set(this.handlers);\n      eventHandlers.forEach(function (eventHandler) {\n        handlerSet.delete(eventHandler);\n      });\n      return new EventSet(handlerSet);\n    }\n  }]);\n\n  return EventSet;\n}();\n\nexport { EventSet as default };"]},"metadata":{},"sourceType":"module"}