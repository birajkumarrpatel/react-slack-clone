{"ast":null,"code":"import _toConsumableArray from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import firebase from\"../../firebase\";import{connect}from\"react-redux\";import{setCurrentChannel,setPrivateChannel}from\"../../actions\";import{Menu,Icon,Modal,Form,Input,Button,Label}from\"semantic-ui-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Channels=/*#__PURE__*/function(_React$Component){_inherits(Channels,_React$Component);var _super=_createSuper(Channels);function Channels(){var _this;_classCallCheck(this,Channels);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeChannel:\"\",user:_this.props.currentUser,channel:null,channels:[],channelName:\"\",channelDetails:\"\",channelsRef:firebase.database().ref(\"channels\"),messagesRef:firebase.database().ref(\"messages\"),notifications:[],modal:false,firstLoad:true};_this.addListeners=function(){var loadedChannels=[];_this.state.channelsRef.on(\"child_added\",function(snap){loadedChannels.push(snap.val());_this.setState({channels:loadedChannels},function(){return _this.setFirstChannel();});_this.addNotificationListener(snap.key);});};_this.addNotificationListener=function(channelId){_this.state.messagesRef.child(channelId).on(\"value\",function(snap){if(_this.state.channel){_this.handleNotifications(channelId,_this.state.channel.id,_this.state.notifications,snap);}});};_this.handleNotifications=function(channelId,currentChannelId,notifications,snap){var lastTotal=0;var index=notifications.findIndex(function(notification){return notification.id===channelId;});if(index!==-1){if(channelId!==currentChannelId){lastTotal=notifications[index].total;if(snap.numChildren()-lastTotal>0){notifications[index].count=snap.numChildren()-lastTotal;}}notifications[index].lastKnownTotal=snap.numChildren();}else{notifications.push({id:channelId,total:snap.numChildren(),lastKnownTotal:snap.numChildren(),count:0});}_this.setState({notifications:notifications});};_this.removeListeners=function(){_this.state.channelsRef.off();};_this.setFirstChannel=function(){var firstChannel=_this.state.channels[0];if(_this.state.firstLoad&&_this.state.channels.length>0){_this.props.setCurrentChannel(firstChannel);_this.setActiveChannel(firstChannel);_this.setState({channel:firstChannel});}_this.setState({firstLoad:false});};_this.addChannel=function(){var _this$state=_this.state,channelsRef=_this$state.channelsRef,channelName=_this$state.channelName,channelDetails=_this$state.channelDetails,user=_this$state.user;var key=channelsRef.push().key;var newChannel={id:key,name:channelName,details:channelDetails,createdBy:{name:user.displayName,avatar:user.photoURL}};channelsRef.child(key).update(newChannel).then(function(){_this.setState({channelName:\"\",channelDetails:\"\"});_this.closeModal();console.log(\"channel added\");}).catch(function(err){console.error(err);});};_this.handleSubmit=function(event){event.preventDefault();if(_this.isFormValid(_this.state)){_this.addChannel();}};_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.changeChannel=function(channel){_this.setActiveChannel(channel);_this.clearNotifications();_this.props.setCurrentChannel(channel);_this.props.setPrivateChannel(false);_this.setState({channel:channel});};_this.clearNotifications=function(){var index=_this.state.notifications.findIndex(function(notification){return notification.id===_this.state.channel.id;});if(index!==-1){var updatedNotifications=_toConsumableArray(_this.state.notifications);updatedNotifications[index].total=_this.state.notifications[index].lastKnownTotal;updatedNotifications[index].count=0;_this.setState({notifications:updatedNotifications});}};_this.setActiveChannel=function(channel){_this.setState({activeChannel:channel.id});};_this.getNotificationCount=function(channel){var count=0;_this.state.notifications.forEach(function(notification){if(notification.id===channel.id){count=notification.count;}});if(count>0)return count;};_this.displayChannels=function(channels){return channels.length>0&&channels.map(function(channel){return/*#__PURE__*/_jsxs(Menu.Item,{onClick:function onClick(){return _this.changeChannel(channel);},name:channel.name,style:{opacity:0.7},active:channel.id===_this.state.activeChannel,children:[_this.getNotificationCount(channel)&&/*#__PURE__*/_jsx(Label,{color:\"red\",children:_this.getNotificationCount(channel)}),\"# \",channel.name]},channel.id);});};_this.isFormValid=function(_ref){var channelName=_ref.channelName,channelDetails=_ref.channelDetails;return channelName&&channelDetails;};_this.openModal=function(){return _this.setState({modal:true});};_this.closeModal=function(){return _this.setState({modal:false});};return _this;}_createClass(Channels,[{key:\"componentDidMount\",value:function componentDidMount(){this.addListeners();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.removeListeners();}},{key:\"render\",value:function render(){var _this$state2=this.state,channels=_this$state2.channels,modal=_this$state2.modal;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(Menu.Menu,{className:\"menu\",children:[/*#__PURE__*/_jsxs(Menu.Item,{children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(Icon,{name:\"exchange\"}),\" CHANNELS\"]}),\" \",\"(\",channels.length,\") \",/*#__PURE__*/_jsx(Icon,{name:\"add\",onClick:this.openModal})]}),this.displayChannels(channels)]}),/*#__PURE__*/_jsxs(Modal,{basic:true,open:modal,onClose:this.closeModal,children:[/*#__PURE__*/_jsx(Modal.Header,{children:\"Add a Channel\"}),/*#__PURE__*/_jsx(Modal.Content,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:this.handleSubmit,children:[/*#__PURE__*/_jsx(Form.Field,{children:/*#__PURE__*/_jsx(Input,{fluid:true,label:\"Name of Channel\",name:\"channelName\",onChange:this.handleChange})}),/*#__PURE__*/_jsx(Form.Field,{children:/*#__PURE__*/_jsx(Input,{fluid:true,label:\"About the Channel\",name:\"channelDetails\",onChange:this.handleChange})})]})}),/*#__PURE__*/_jsxs(Modal.Actions,{children:[/*#__PURE__*/_jsxs(Button,{color:\"green\",inverted:true,onClick:this.handleSubmit,children:[/*#__PURE__*/_jsx(Icon,{name:\"checkmark\"}),\" Add\"]}),/*#__PURE__*/_jsxs(Button,{color:\"red\",inverted:true,onClick:this.closeModal,children:[/*#__PURE__*/_jsx(Icon,{name:\"remove\"}),\" Cancel\"]})]})]})]});}}]);return Channels;}(React.Component);export default connect(null,{setCurrentChannel:setCurrentChannel,setPrivateChannel:setPrivateChannel})(Channels);","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/src/components/SidePanel/Channels.js"],"names":["React","firebase","connect","setCurrentChannel","setPrivateChannel","Menu","Icon","Modal","Form","Input","Button","Label","Channels","state","activeChannel","user","props","currentUser","channel","channels","channelName","channelDetails","channelsRef","database","ref","messagesRef","notifications","modal","firstLoad","addListeners","loadedChannels","on","snap","push","val","setState","setFirstChannel","addNotificationListener","key","channelId","child","handleNotifications","id","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","removeListeners","off","firstChannel","length","setActiveChannel","addChannel","newChannel","name","details","createdBy","displayName","avatar","photoURL","update","then","closeModal","console","log","catch","err","error","handleSubmit","event","preventDefault","isFormValid","handleChange","target","value","changeChannel","clearNotifications","updatedNotifications","getNotificationCount","forEach","displayChannels","map","opacity","openModal","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport {\n  Menu,\n  Icon,\n  Modal,\n  Form,\n  Input,\n  Button,\n  Label\n} from \"semantic-ui-react\";\n\nclass Channels extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    channel: null,\n    channels: [],\n    channelName: \"\",\n    channelDetails: \"\",\n    channelsRef: firebase.database().ref(\"channels\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    notifications: [],\n    modal: false,\n    firstLoad: true\n  };\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelsRef.on(\"child_added\", snap => {\n      loadedChannels.push(snap.val());\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\n      this.addNotificationListener(snap.key);\n    });\n  };\n\n  addNotificationListener = channelId => {\n    this.state.messagesRef.child(channelId).on(\"value\", snap => {\n      if (this.state.channel) {\n        this.handleNotifications(\n          channelId,\n          this.state.channel.id,\n          this.state.notifications,\n          snap\n        );\n      }\n    });\n  };\n\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\n    let lastTotal = 0;\n\n    let index = notifications.findIndex(\n      notification => notification.id === channelId\n    );\n\n    if (index !== -1) {\n      if (channelId !== currentChannelId) {\n        lastTotal = notifications[index].total;\n\n        if (snap.numChildren() - lastTotal > 0) {\n          notifications[index].count = snap.numChildren() - lastTotal;\n        }\n      }\n      notifications[index].lastKnownTotal = snap.numChildren();\n    } else {\n      notifications.push({\n        id: channelId,\n        total: snap.numChildren(),\n        lastKnownTotal: snap.numChildren(),\n        count: 0\n      });\n    }\n\n    this.setState({ notifications });\n  };\n\n  removeListeners = () => {\n    this.state.channelsRef.off();\n  };\n\n  setFirstChannel = () => {\n    const firstChannel = this.state.channels[0];\n    if (this.state.firstLoad && this.state.channels.length > 0) {\n      this.props.setCurrentChannel(firstChannel);\n      this.setActiveChannel(firstChannel);\n      this.setState({ channel: firstChannel });\n    }\n    this.setState({ firstLoad: false });\n  };\n\n  addChannel = () => {\n    const { channelsRef, channelName, channelDetails, user } = this.state;\n\n    const key = channelsRef.push().key;\n\n    const newChannel = {\n      id: key,\n      name: channelName,\n      details: channelDetails,\n      createdBy: {\n        name: user.displayName,\n        avatar: user.photoURL\n      }\n    };\n\n    channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelName: \"\", channelDetails: \"\" });\n        this.closeModal();\n        console.log(\"channel added\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.addChannel();\n    }\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  changeChannel = channel => {\n    this.setActiveChannel(channel);\n    this.clearNotifications();\n    this.props.setCurrentChannel(channel);\n    this.props.setPrivateChannel(false);\n    this.setState({ channel });\n  };\n\n  clearNotifications = () => {\n    let index = this.state.notifications.findIndex(\n      notification => notification.id === this.state.channel.id\n    );\n\n    if (index !== -1) {\n      let updatedNotifications = [...this.state.notifications];\n      updatedNotifications[index].total = this.state.notifications[\n        index\n      ].lastKnownTotal;\n      updatedNotifications[index].count = 0;\n      this.setState({ notifications: updatedNotifications });\n    }\n  };\n\n  setActiveChannel = channel => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  getNotificationCount = channel => {\n    let count = 0;\n\n    this.state.notifications.forEach(notification => {\n      if (notification.id === channel.id) {\n        count = notification.count;\n      }\n    });\n\n    if (count > 0) return count;\n  };\n\n  displayChannels = channels =>\n    channels.length > 0 &&\n    channels.map(channel => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.7 }}\n        active={channel.id === this.state.activeChannel}\n      >\n        {this.getNotificationCount(channel) && (\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\n        )}\n        # {channel.name}\n      </Menu.Item>\n    ));\n\n  isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { channels, modal } = this.state;\n\n    return (\n      <React.Fragment>\n        <Menu.Menu className=\"menu\">\n          <Menu.Item>\n            <span>\n              <Icon name=\"exchange\" /> CHANNELS\n            </span>{\" \"}\n            ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\n          </Menu.Item>\n          {this.displayChannels(channels)}\n        </Menu.Menu>\n\n        {/* Add Channel Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Add a Channel</Modal.Header>\n          <Modal.Content>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"Name of Channel\"\n                  name=\"channelName\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"About the Channel\"\n                  name=\"channelDetails\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n            </Form>\n          </Modal.Content>\n\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\n              <Icon name=\"checkmark\" /> Add\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(Channels);\n"]},"metadata":{},"sourceType":"module"}