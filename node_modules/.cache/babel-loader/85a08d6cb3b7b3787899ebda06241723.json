{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport EventPool from './EventPool';\n\nvar EventTarget = /*#__PURE__*/function () {\n  /** @private {Map<String,Function>} */\n\n  /** @private {Map<String,EventPool>} */\n\n  /**\n   * @param {HTMLElement} target\n   */\n  function EventTarget(target) {\n    _classCallCheck(this, EventTarget);\n\n    _defineProperty(this, \"handlers\", new Map());\n\n    _defineProperty(this, \"pools\", new Map());\n\n    _defineProperty(this, \"createEmitter\", function (eventType, eventPools) {\n      return function (event) {\n        eventPools.forEach(function (pool) {\n          pool.dispatchEvent(eventType, event);\n        });\n      };\n    });\n    /** @private */\n\n\n    this.target = target;\n  }\n  /**\n   * @param {String} poolName\n   * @param {String} eventType\n   * @param {Function[]} eventHandlers\n   */\n\n\n  _createClass(EventTarget, [{\n    key: \"addHandlers\",\n    value: function addHandlers(poolName, eventType, eventHandlers) {\n      this.removeTargetHandler(eventType);\n\n      if (!this.pools.has(poolName)) {\n        this.pools.set(poolName, EventPool.createByType(poolName, eventType, eventHandlers));\n      } else {\n        this.pools.set(poolName, this.pools.get(poolName).addHandlers(eventType, eventHandlers));\n      }\n\n      this.addTargetHandler(eventType);\n    }\n    /**\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"hasHandlers\",\n    value: function hasHandlers() {\n      return this.handlers.size > 0;\n    }\n    /**\n     * @param {String} poolName\n     * @param {String} eventType\n     * @param {Function[]} eventHandlers\n     */\n\n  }, {\n    key: \"removeHandlers\",\n    value: function removeHandlers(poolName, eventType, eventHandlers) {\n      var pool = this.pools.get(poolName);\n\n      if (pool) {\n        var newPool = pool.removeHandlers(eventType, eventHandlers);\n\n        if (newPool.hasHandlers()) {\n          this.pools.set(poolName, newPool);\n        } else {\n          this.pools.delete(poolName);\n        }\n\n        this.removeTargetHandler(eventType);\n        if (this.pools.size > 0) this.addTargetHandler(eventType);\n      }\n    }\n    /**\n     * @private\n     * @param {String} eventType\n     * @param {Map<String,EventPool>} eventPools\n     * @return {Function}\n     */\n\n  }, {\n    key: \"addTargetHandler\",\n\n    /**\n     * @private\n     * @param {String} eventType\n     */\n    value: function addTargetHandler(eventType) {\n      var handler = this.createEmitter(eventType, this.pools);\n      this.handlers.set(eventType, handler);\n      this.target.addEventListener(eventType, handler);\n    }\n    /**\n     * @private\n     * @param {String} eventType\n     */\n\n  }, {\n    key: \"removeTargetHandler\",\n    value: function removeTargetHandler(eventType) {\n      if (this.handlers.has(eventType)) {\n        this.target.removeEventListener(eventType, this.handlers.get(eventType));\n        this.handlers.delete(eventType);\n      }\n    }\n  }]);\n\n  return EventTarget;\n}();\n\nexport { EventTarget as default };","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/semantic-ui-react/dist/es/lib/eventStack/EventTarget.js"],"names":["_classCallCheck","_createClass","_defineProperty","EventPool","EventTarget","target","Map","eventType","eventPools","event","forEach","pool","dispatchEvent","key","value","addHandlers","poolName","eventHandlers","removeTargetHandler","pools","has","set","createByType","get","addTargetHandler","hasHandlers","handlers","size","removeHandlers","newPool","delete","handler","createEmitter","addEventListener","removeEventListener","default"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport EventPool from './EventPool';\n\nvar EventTarget =\n/*#__PURE__*/\nfunction () {\n  /** @private {Map<String,Function>} */\n\n  /** @private {Map<String,EventPool>} */\n\n  /**\n   * @param {HTMLElement} target\n   */\n  function EventTarget(target) {\n    _classCallCheck(this, EventTarget);\n\n    _defineProperty(this, \"handlers\", new Map());\n\n    _defineProperty(this, \"pools\", new Map());\n\n    _defineProperty(this, \"createEmitter\", function (eventType, eventPools) {\n      return function (event) {\n        eventPools.forEach(function (pool) {\n          pool.dispatchEvent(eventType, event);\n        });\n      };\n    });\n\n    /** @private */\n    this.target = target;\n  }\n  /**\n   * @param {String} poolName\n   * @param {String} eventType\n   * @param {Function[]} eventHandlers\n   */\n\n\n  _createClass(EventTarget, [{\n    key: \"addHandlers\",\n    value: function addHandlers(poolName, eventType, eventHandlers) {\n      this.removeTargetHandler(eventType);\n\n      if (!this.pools.has(poolName)) {\n        this.pools.set(poolName, EventPool.createByType(poolName, eventType, eventHandlers));\n      } else {\n        this.pools.set(poolName, this.pools.get(poolName).addHandlers(eventType, eventHandlers));\n      }\n\n      this.addTargetHandler(eventType);\n    }\n    /**\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"hasHandlers\",\n    value: function hasHandlers() {\n      return this.handlers.size > 0;\n    }\n    /**\n     * @param {String} poolName\n     * @param {String} eventType\n     * @param {Function[]} eventHandlers\n     */\n\n  }, {\n    key: \"removeHandlers\",\n    value: function removeHandlers(poolName, eventType, eventHandlers) {\n      var pool = this.pools.get(poolName);\n\n      if (pool) {\n        var newPool = pool.removeHandlers(eventType, eventHandlers);\n\n        if (newPool.hasHandlers()) {\n          this.pools.set(poolName, newPool);\n        } else {\n          this.pools.delete(poolName);\n        }\n\n        this.removeTargetHandler(eventType);\n        if (this.pools.size > 0) this.addTargetHandler(eventType);\n      }\n    }\n    /**\n     * @private\n     * @param {String} eventType\n     * @param {Map<String,EventPool>} eventPools\n     * @return {Function}\n     */\n\n  }, {\n    key: \"addTargetHandler\",\n\n    /**\n     * @private\n     * @param {String} eventType\n     */\n    value: function addTargetHandler(eventType) {\n      var handler = this.createEmitter(eventType, this.pools);\n      this.handlers.set(eventType, handler);\n      this.target.addEventListener(eventType, handler);\n    }\n    /**\n     * @private\n     * @param {String} eventType\n     */\n\n  }, {\n    key: \"removeTargetHandler\",\n    value: function removeTargetHandler(eventType) {\n      if (this.handlers.has(eventType)) {\n        this.target.removeEventListener(eventType, this.handlers.get(eventType));\n        this.handlers.delete(eventType);\n      }\n    }\n  }]);\n\n  return EventTarget;\n}();\n\nexport { EventTarget as default };"]},"metadata":{},"sourceType":"module"}