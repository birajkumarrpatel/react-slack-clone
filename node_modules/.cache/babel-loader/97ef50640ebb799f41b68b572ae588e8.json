{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIRAJ\\\\Desktop\\\\helping-hand\\\\src\\\\components\\\\Auth\\\\Login.js\";\nimport React from \"react\";\nimport firebase from \"../../firebase\";\nimport { Grid, Form, Segment, Button, Header, Message, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: [],\n      loading: false\n    };\n\n    this.displayErrors = errors => errors.map((error, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 30\n    }, this));\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.isFormValid(this.state)) {\n        this.setState({\n          errors: [],\n          loading: true\n        });\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(signedInUser => {\n          console.log(signedInUser);\n        }).catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n      }\n    };\n\n    this.isFormValid = ({\n      email,\n      password\n    }) => email && password;\n\n    this.handleInputError = (errors, inputName) => {\n      return errors.some(error => error.message.toLowerCase().includes(inputName)) ? \"error\" : \"\";\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      errors,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h1\",\n          icon: true,\n          color: \"violet\",\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"code branch\",\n            color: \"violet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), \"Login to HelpingHand\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          size: \"large\",\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            stacked: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              name: \"email\",\n              icon: \"mail\",\n              iconPosition: \"left\",\n              placeholder: \"Email Address\",\n              onChange: this.handleChange,\n              value: email,\n              className: this.handleInputError(errors, \"email\"),\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              name: \"password\",\n              icon: \"lock\",\n              iconPosition: \"left\",\n              placeholder: \"Password\",\n              onChange: this.handleChange,\n              value: password,\n              className: this.handleInputError(errors, \"password\"),\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loading,\n              className: loading ? \"loading\" : \"\",\n              color: \"violet\",\n              fluid: true,\n              size: \"large\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(Message, {\n          error: true,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), this.displayErrors(errors)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/helping-hand/src/components/Auth/Login.js"],"names":["React","firebase","Grid","Form","Segment","Button","Header","Message","Icon","Link","Login","Component","state","email","password","errors","loading","displayErrors","map","error","i","message","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","isFormValid","auth","signInWithEmailAndPassword","then","signedInUser","console","log","catch","err","concat","handleInputError","inputName","some","toLowerCase","includes","render","maxWidth","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport firebase from \"../../firebase\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(signedInUser => {\n          console.log(signedInUser);\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\n            <Icon name=\"code branch\" color=\"violet\" />\n            Login to HelpingHand\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"violet\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Don't have an account? <Link to=\"/register\">Register</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}