{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIRAJ\\\\Desktop\\\\helping-hand\\\\src\\\\components\\\\SidePanel\\\\UserPanel.js\";\nimport React from \"react\";\nimport firebase from \"../../firebase\";\nimport AvatarEditor from \"react-avatar-editor\"; // prettier-ignore\n\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: this.props.currentUser,\n      modal: false,\n      previewImage: \"\",\n      croppedImage: \"\",\n      blob: null,\n      uploadedCroppedImage: \"\",\n      storageRef: firebase.storage().ref(),\n      userRef: firebase.auth().currentUser,\n      usersRef: firebase.database().ref(\"users\"),\n      metadata: {\n        contentType: \"image/jpeg\"\n      }\n    };\n\n    this.openModal = () => this.setState({\n      modal: true\n    });\n\n    this.closeModal = () => this.setState({\n      modal: false\n    });\n\n    this.dropdownOptions = () => [{\n      key: \"user\",\n      text: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Signed in as \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: this.state.user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this),\n      disabled: true\n    }, {\n      key: \"avatar\",\n      text: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.openModal,\n        children: \"Change Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, {\n      key: \"signout\",\n      text: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.handleSignout,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }];\n\n    this.uploadCroppedImage = () => {\n      const {\n        storageRef,\n        userRef,\n        blob,\n        metadata\n      } = this.state;\n      storageRef.child(`avatars/user-${userRef.uid}`).put(blob, metadata).then(snap => {\n        snap.ref.getDownloadURL().then(downloadURL => {\n          this.setState({\n            uploadedCroppedImage: downloadURL\n          }, () => this.changeAvatar());\n        });\n      });\n    };\n\n    this.changeAvatar = () => {\n      this.state.userRef.updateProfile({\n        photoURL: this.state.uploadedCroppedImage\n      }).then(() => {\n        console.log(\"PhotoURL updated\");\n        this.closeModal();\n      }).catch(err => {\n        console.error(err);\n      });\n      this.state.usersRef.child(this.state.user.uid).update({\n        avatar: this.state.uploadedCroppedImage\n      }).then(() => {\n        console.log(\"User avatar updated\");\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n\n    this.handleChange = event => {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n\n      if (file) {\n        reader.readAsDataURL(file);\n        reader.addEventListener(\"load\", () => {\n          this.setState({\n            previewImage: reader.result\n          });\n        });\n      }\n    };\n\n    this.handleCropImage = () => {\n      if (this.avatarEditor) {\n        this.avatarEditor.getImageScaledToCanvas().toBlob(blob => {\n          let imageUrl = URL.createObjectURL(blob);\n          this.setState({\n            croppedImage: imageUrl,\n            blob\n          });\n        });\n      }\n    };\n\n    this.handleSignout = () => {\n      firebase.auth().signOut().then(() => console.log(\"signed out!\"));\n    };\n  }\n\n  render() {\n    const {\n      user,\n      modal,\n      previewImage,\n      croppedImage\n    } = this.state;\n    const {\n      primaryColor\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        background: primaryColor\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n          style: {\n            padding: \"1.2em\",\n            margin: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            inverted: true,\n            floated: \"left\",\n            as: \"h2\",\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n              children: \"Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Header, {\n            style: {\n              padding: \"0.25em\"\n            },\n            as: \"h4\",\n            inverted: true,\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              trigger: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  src: user.photoURL,\n                  spaced: \"right\",\n                  avatar: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), user.displayName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this),\n              options: this.dropdownOptions()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          basic: true,\n          open: modal,\n          onClose: this.closeModal,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            children: \"Change Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              onChange: this.handleChange,\n              fluid: true,\n              type: \"file\",\n              label: \"New Avatar\",\n              name: \"previewImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              centered: true,\n              stackable: true,\n              columns: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n                centered: true,\n                children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                  className: \"ui center aligned grid\",\n                  children: previewImage && /*#__PURE__*/_jsxDEV(AvatarEditor, {\n                    ref: node => this.avatarEditor = node,\n                    image: previewImage,\n                    width: 120,\n                    height: 120,\n                    border: 50,\n                    scale: 1.2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  children: croppedImage && /*#__PURE__*/_jsxDEV(Image, {\n                    style: {\n                      margin: \"3.5em auto\"\n                    },\n                    width: 100,\n                    height: 100,\n                    src: croppedImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n            children: [croppedImage && /*#__PURE__*/_jsxDEV(Button, {\n              color: \"green\",\n              inverted: true,\n              onClick: this.uploadCroppedImage,\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), \" Change Avatar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"green\",\n              inverted: true,\n              onClick: this.handleCropImage,\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), \" Preview\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"red\",\n              inverted: true,\n              onClick: this.closeModal,\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), \" Cancel\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserPanel;","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/helping-hand/src/components/SidePanel/UserPanel.js"],"names":["React","firebase","AvatarEditor","Grid","Header","Icon","Dropdown","Image","Modal","Input","Button","UserPanel","Component","state","user","props","currentUser","modal","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","storage","ref","userRef","auth","usersRef","database","metadata","contentType","openModal","setState","closeModal","dropdownOptions","key","text","displayName","disabled","handleSignout","uploadCroppedImage","child","uid","put","then","snap","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","console","log","catch","err","error","update","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","render","primaryColor","background","padding","margin","node"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport firebase from \"../../firebase\";\nimport AvatarEditor from \"react-avatar-editor\";\n// prettier-ignore\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\n\nclass UserPanel extends React.Component {\n  state = {\n    user: this.props.currentUser,\n    modal: false,\n    previewImage: \"\",\n    croppedImage: \"\",\n    blob: null,\n    uploadedCroppedImage: \"\",\n    storageRef: firebase.storage().ref(),\n    userRef: firebase.auth().currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    metadata: {\n      contentType: \"image/jpeg\"\n    }\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  dropdownOptions = () => [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed in as <strong>{this.state.user.displayName}</strong>\n        </span>\n      ),\n      disabled: true\n    },\n    {\n      key: \"avatar\",\n      text: <span onClick={this.openModal}>Change Avatar</span>\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={this.handleSignout}>Sign Out</span>\n    }\n  ];\n\n  uploadCroppedImage = () => {\n    const { storageRef, userRef, blob, metadata } = this.state;\n\n    storageRef\n      .child(`avatars/user-${userRef.uid}`)\n      .put(blob, metadata)\n      .then(snap => {\n        snap.ref.getDownloadURL().then(downloadURL => {\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\n            this.changeAvatar()\n          );\n        });\n      });\n  };\n\n  changeAvatar = () => {\n    this.state.userRef\n      .updateProfile({\n        photoURL: this.state.uploadedCroppedImage\n      })\n      .then(() => {\n        console.log(\"PhotoURL updated\");\n        this.closeModal();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n    this.state.usersRef\n      .child(this.state.user.uid)\n      .update({ avatar: this.state.uploadedCroppedImage })\n      .then(() => {\n        console.log(\"User avatar updated\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      reader.readAsDataURL(file);\n      reader.addEventListener(\"load\", () => {\n        this.setState({ previewImage: reader.result });\n      });\n    }\n  };\n\n  handleCropImage = () => {\n    if (this.avatarEditor) {\n      this.avatarEditor.getImageScaledToCanvas().toBlob(blob => {\n        let imageUrl = URL.createObjectURL(blob);\n        this.setState({\n          croppedImage: imageUrl,\n          blob\n        });\n      });\n    }\n  };\n\n  handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => console.log(\"signed out!\"));\n  };\n\n  render() {\n    const { user, modal, previewImage, croppedImage } = this.state;\n    const { primaryColor } = this.props;\n\n    return (\n      <Grid style={{ background: primaryColor }}>\n        <Grid.Column>\n          <Grid.Row style={{ padding: \"1.2em\", margin: 0 }}>\n            {/* App Header */}\n            <Header inverted floated=\"left\" as=\"h2\">\n              <Icon name=\"code\" />\n              <Header.Content>Chat</Header.Content>\n            </Header>\n\n            {/* User Dropdown  */}\n            <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n              <Dropdown\n                trigger={\n                  <span>\n                    <Image src={user.photoURL} spaced=\"right\" avatar />\n                    {user.displayName}\n                  </span>\n                }\n                options={this.dropdownOptions()}\n              />\n            </Header>\n          </Grid.Row>\n\n          {/* Change User Avatar Modal   */}\n          <Modal basic open={modal} onClose={this.closeModal}>\n            <Modal.Header>Change Avatar</Modal.Header>\n            <Modal.Content>\n              <Input\n                onChange={this.handleChange}\n                fluid\n                type=\"file\"\n                label=\"New Avatar\"\n                name=\"previewImage\"\n              />\n              <Grid centered stackable columns={2}>\n                <Grid.Row centered>\n                  <Grid.Column className=\"ui center aligned grid\">\n                    {previewImage && (\n                      <AvatarEditor\n                        ref={node => (this.avatarEditor = node)}\n                        image={previewImage}\n                        width={120}\n                        height={120}\n                        border={50}\n                        scale={1.2}\n                      />\n                    )}\n                  </Grid.Column>\n                  <Grid.Column>\n                    {croppedImage && (\n                      <Image\n                        style={{ margin: \"3.5em auto\" }}\n                        width={100}\n                        height={100}\n                        src={croppedImage}\n                      />\n                    )}\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n              {croppedImage && (\n                <Button\n                  color=\"green\"\n                  inverted\n                  onClick={this.uploadCroppedImage}\n                >\n                  <Icon name=\"save\" /> Change Avatar\n                </Button>\n              )}\n              <Button color=\"green\" inverted onClick={this.handleCropImage}>\n                <Icon name=\"image\" /> Preview\n              </Button>\n              <Button color=\"red\" inverted onClick={this.closeModal}>\n                <Icon name=\"remove\" /> Cancel\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default UserPanel;\n"]},"metadata":{},"sourceType":"module"}