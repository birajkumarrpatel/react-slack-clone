{"ast":null,"code":"import _defineProperty from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/BIRAJ/Desktop/react-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import firebase from\"../../firebase\";import{Grid,Form,Segment,Button,Header,Message,Icon}from\"semantic-ui-react\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=/*#__PURE__*/function(_React$Component){_inherits(Login,_React$Component);var _super=_createSuper(Login);function Login(){var _this;_classCallCheck(this,Login);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={email:\"\",password:\"\",errors:[],loading:false};_this.displayErrors=function(errors){return errors.map(function(error,i){return/*#__PURE__*/_jsx(\"p\",{children:error.message},i);});};_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.handleSubmit=function(event){event.preventDefault();if(_this.isFormValid(_this.state)){_this.setState({errors:[],loading:true});firebase.auth().signInWithEmailAndPassword(_this.state.email,_this.state.password).then(function(signedInUser){console.log(signedInUser);}).catch(function(err){console.error(err);_this.setState({errors:_this.state.errors.concat(err),loading:false});});}};_this.isFormValid=function(_ref){var email=_ref.email,password=_ref.password;return email&&password;};_this.handleInputError=function(errors,inputName){return errors.some(function(error){return error.message.toLowerCase().includes(inputName);})?\"error\":\"\";};return _this;}_createClass(Login,[{key:\"render\",value:function render(){var _this$state=this.state,email=_this$state.email,password=_this$state.password,errors=_this$state.errors,loading=_this$state.loading;return/*#__PURE__*/_jsx(Grid,{textAlign:\"center\",verticalAlign:\"middle\",className:\"app\",children:/*#__PURE__*/_jsxs(Grid.Column,{style:{maxWidth:450},children:[/*#__PURE__*/_jsxs(Header,{as:\"h1\",icon:true,color:\"violet\",textAlign:\"center\",children:[/*#__PURE__*/_jsx(Icon,{name:\"code branch\",color:\"violet\"}),\"Login to HelpingHand\"]}),/*#__PURE__*/_jsx(Form,{onSubmit:this.handleSubmit,size:\"large\",children:/*#__PURE__*/_jsxs(Segment,{stacked:true,children:[/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"email\",icon:\"mail\",iconPosition:\"left\",placeholder:\"Email Address\",onChange:this.handleChange,value:email,className:this.handleInputError(errors,\"email\"),type:\"email\"}),/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"password\",icon:\"lock\",iconPosition:\"left\",placeholder:\"Password\",onChange:this.handleChange,value:password,className:this.handleInputError(errors,\"password\"),type:\"password\"}),/*#__PURE__*/_jsx(Button,{disabled:loading,className:loading?\"loading\":\"\",color:\"violet\",fluid:true,size:\"large\",children:\"Submit\"})]})}),errors.length>0&&/*#__PURE__*/_jsxs(Message,{error:true,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Error\"}),this.displayErrors(errors)]}),/*#__PURE__*/_jsxs(Message,{children:[\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Register\"})]})]})});}}]);return Login;}(React.Component);export default Login;","map":{"version":3,"sources":["C:/Users/BIRAJ/Desktop/react-slack-clone/src/components/Auth/Login.js"],"names":["React","firebase","Grid","Form","Segment","Button","Header","Message","Icon","Link","Login","state","email","password","errors","loading","displayErrors","map","error","i","message","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","isFormValid","auth","signInWithEmailAndPassword","then","signedInUser","console","log","catch","err","concat","handleInputError","inputName","some","toLowerCase","includes","maxWidth","length","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport firebase from \"../../firebase\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(signedInUser => {\n          console.log(signedInUser);\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\n            <Icon name=\"code branch\" color=\"violet\" />\n            Login to HelpingHand\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"violet\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Don't have an account? <Link to=\"/register\">Register</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}