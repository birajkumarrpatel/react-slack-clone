{"version":3,"sources":["firebase.js","actions/types.js","actions/index.js","components/ColorPanel/ColorPanel.js","components/SidePanel/UserPanel.js","components/SidePanel/Channels.js","components/SidePanel/DirectMessages.js","components/SidePanel/Starred.js","components/SidePanel/SidePanel.js","components/Messages/MessagesHeader.js","components/Messages/FileModal.js","components/Messages/ProgressBar.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/skeleton.js","components/Messages/Messages.js","components/MetaPanel/MetaPanel.js","components/App.js","components/Auth/Login.js","components/Auth/Register.js","Spinner.js","registerServiceWorker.js","reducers/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","SET_USER","CLEAR_USER","SET_CURRENT_CHANNEL","SET_PRIVATE_CHANNEL","SET_PRIVATE_POSTS","SET_COLORS","setCurrentChannel","channel","type","actionTypes","payload","currentChannel","setPrivateChannel","isPrivateChannel","ColorPanel","state","modal","primary","secondary","user","props","currentUser","usersRef","database","ref","userColors","removeListeners","child","uid","off","addListener","userId","on","snap","unshift","val","setState","handleChangePrimary","color","hex","handleChangeSecondary","handleSaveColors","saveColors","push","update","then","console","log","closeModal","catch","err","error","displayUserColors","colors","length","map","i","Fragment","Divider","className","onClick","setColors","style","background","openModal","this","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Button","size","Modal","basic","open","onClose","Header","Content","Segment","Label","content","onChange","Actions","Icon","name","React","Component","connect","primaryColor","secondaryColor","UserPanel","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","storage","userRef","auth","metadata","contentType","dropdownOptions","key","text","displayName","disabled","handleSignout","uploadCroppedImage","put","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","Grid","Column","Row","padding","margin","floated","Dropdown","trigger","Image","src","spaced","options","Input","fluid","label","centered","stackable","columns","node","image","height","border","scale","Channels","activeChannel","channels","channelName","channelDetails","channelsRef","messagesRef","typingRef","notifications","firstLoad","addListeners","loadedChannels","setFirstChannel","addNotificationListener","channelId","handleNotifications","id","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","forEach","firstChannel","setActiveChannel","addChannel","newChannel","details","createdBy","handleSubmit","preventDefault","isFormValid","value","changeChannel","remove","clearNotifications","updatedNotifications","getNotificationCount","displayChannels","Item","opacity","active","Form","onSubmit","Field","DirectMessages","users","connectedRef","presenceRef","currentUserUid","loadedUsers","set","onDisconnect","addStatusToUser","connected","updatedUsers","reduce","acc","concat","isUserOnline","status","channelData","getChannelId","currentUserId","fontStyle","Starred","starredChannels","removeListener","starredChannel","channelToRemove","filteredChannels","filter","SidePanel","fixed","fontSize","MessagesHeader","numUniqueUsers","handleSearchChange","searchLoading","handleStar","isChannelStarred","clearing","marginBottom","Subheader","loading","placeholder","FileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","filename","includes","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","MessageForm","uploadTask","message","errors","emojiPicker","handleKeyDown","keyCode","sendMessage","handleTogglePicker","handleAddEmoji","emoji","oldMessage","newMessage","colonToUnicode","colons","setTimeout","messageInputRef","focus","replace","x","emojiIndex","emojis","unicode","native","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","getMessagesRef","getPath","pathToUpload","filePath","uuidv4","Math","round","bytesTransferred","totalBytes","snapshot","downloadUrl","sendFileMessage","cancel","onSelect","title","onKeyDown","labelPosition","some","Group","widths","isOwnMessage","isImage","hasOwnProperty","Message","Comment","Avatar","Author","Metadata","moment","fromNow","Text","Typing","Skeleton","Messages","privateChannel","privateMessagesRef","messages","messagesLoading","searchTerm","searchResults","typingUsers","listeners","addToListeners","listener","newListener","scrollToBottom","messagesEnd","scrollIntoView","behaviour","addMessageListener","addTypingListeners","loadedMessages","countUniqueUsers","countUserPosts","addUserStarsListener","once","data","prevStarred","Object","keys","prevState","starChannel","handleSearchMessages","channelMessages","regex","RegExp","match","uniqueUsers","plural","userPosts","setUserPosts","displayMessages","displayChannelName","displayTypingUsers","display","alignItems","displayMessageSkeleton","Array","_","prevProps","MetaPanel","activeIndex","setActiveIndex","titleProps","newIndex","formatCount","num","displayTopPosters","posts","entries","sort","a","b","List","Description","slice","attached","Accordion","styled","Title","circular","marginLeft","Login","email","password","displayErrors","signInWithEmailAndPassword","signedInUser","handleInputError","inputName","toLowerCase","textAlign","verticalAlign","maxWidth","stacked","iconPosition","Link","to","Register","username","passwordConfirmation","isFormEmpty","isPasswordValid","createUserWithEmailAndPassword","createdUser","md5","saveUser","Spinner","Dimmer","Loader","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialUserState","isLoading","initialChannelState","InitialColorsState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","Switch","Route","exact","path","component","App","RootWithAuth","withRouter","ReactDOM","render","document","getElementById","process","origin","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fcf89126.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nimport \"firebase/auth\";\n\nimport \"firebase/database\";\n\nimport \"firebase/storage\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCeo-LVX4VJ-AleJN2O3oTu1Ia22hbNlo0\",\n  authDomain: \"react-slack-clone-by-biraj.firebaseapp.com\",\n  projectId: \"react-slack-clone-by-biraj\",\n  storageBucket: \"react-slack-clone-by-biraj.appspot.com\",\n  messagingSenderId: \"877501910791\",\n  appId: \"1:877501910791:web:f207ae35ac1965ca93ffa2\",\n  measurementId: \"G-VS1R5591KM\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","/* User Action Types */\nexport const SET_USER = \"SET_USER\";\nexport const CLEAR_USER = \"CLEAR_USER\";\n\n/* Channel Action Types */\nexport const SET_CURRENT_CHANNEL = \"SET_CURRENT_CHANNEL\";\nexport const SET_PRIVATE_CHANNEL = \"SET_PRIVATE_CHANNEL\";\nexport const SET_PRIVATE_POSTS = \"SET_USER_POSTS\";\n\n/* Colors Action Types */\nexport const SET_COLORS = \"SET_COLORS\";","import * as actionTypes from \"./types\";\n\n/* User Actions */\nexport const setUser = user => {\n  return {\n    type: actionTypes.SET_USER,\n    payload: {\n      currentUser: user\n    }\n  };\n};\n\nexport const clearUser = () => {\n  return {\n    type: actionTypes.CLEAR_USER\n  };\n};\n\n/* Channel Actions */\nexport const setCurrentChannel = channel => {\n  return {\n    type: actionTypes.SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel\n    }\n  };\n};\n\nexport const setPrivateChannel = isPrivateChannel => {\n  return {\n    type: actionTypes.SET_PRIVATE_CHANNEL,\n    payload: {\n      isPrivateChannel\n    }\n  };\n};\n\nexport const setUserPosts = userPosts => {\n  return {\n    type: actionTypes.SET_PRIVATE_POSTS,\n    payload: {\n      userPosts \n    }\n  };\n};\n\n\n\n/ * Colors Action * /\nexport const setColors = (primaryColor, secondaryColor) => {\n  return {\n    type: actionTypes.SET_COLORS,\n    payload: {\n      primaryColor,\n      secondaryColor\n    }\n  }\n}","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setColors } from \"../../actions\";\n// prettier-ignore\nimport { Sidebar, Menu, Divider, Button, Modal, Icon, Label, Segment } from \"semantic-ui-react\";\nimport { SliderPicker } from \"react-color\";\n\nclass ColorPanel extends React.Component {\n  state = {\n    modal: false,\n    primary: \"\",\n    secondary: \"\",\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    userColors: []\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListener(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners = () => {\n    this.state.usersRef.child(`${this.state.user.uid}/colors`).off();\n  };\n\n  addListener = userId => {\n    let userColors = [];\n    this.state.usersRef.child(`${userId}/colors`).on(\"child_added\", snap => {\n      userColors.unshift(snap.val());\n      this.setState({ userColors });\n    });\n  };\n\n  handleChangePrimary = color => this.setState({ primary: color.hex });\n\n  handleChangeSecondary = color => this.setState({ secondary: color.hex });\n\n  handleSaveColors = () => {\n    if (this.state.primary && this.state.secondary) {\n      this.saveColors(this.state.primary, this.state.secondary);\n    }\n  };\n\n  saveColors = (primary, secondary) => {\n    this.state.usersRef\n      .child(`${this.state.user.uid}/colors`)\n      .push()\n      .update({\n        primary,\n        secondary\n      })\n      .then(() => {\n        console.log(\"Colors added\");\n        this.closeModal();\n      })\n      .catch(err => console.error(err));\n  };\n\n  displayUserColors = colors =>\n    colors.length > 0 &&\n    colors.map((color, i) => (\n      <React.Fragment key={i}>\n        <Divider />\n        <div\n          className=\"color__container\"\n          onClick={() => this.props.setColors(color.primary, color.secondary)}\n        >\n          <div className=\"color__square\" style={{ background: color.primary }}>\n            <div\n              className=\"color__overlay\"\n              style={{ background: color.secondary }}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    ));\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { modal, primary, secondary, userColors } = this.state;\n\n    return (\n      <Sidebar\n        as={Menu}\n        icon=\"labeled\"\n        inverted\n        vertical\n        visible\n        width=\"very thin\"\n      >\n        <Divider />\n        <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={this.openModal} />\n        {this.displayUserColors(userColors)}\n\n        {/* Color Picker Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Choose App Colors</Modal.Header>\n          <Modal.Content>\n            <Segment inverted>\n              <Label content=\"Primary Color\" />\n              <SliderPicker\n                color={primary}\n                onChange={this.handleChangePrimary}\n              />\n            </Segment>\n\n            <Segment inverted>\n              <Label content=\"Secondary Color\" />\n              <SliderPicker\n                color={secondary}\n                onChange={this.handleChangeSecondary}\n              />\n            </Segment>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSaveColors}>\n              <Icon name=\"checkmark\" /> Save Colors\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Sidebar>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setColors }\n)(ColorPanel);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport AvatarEditor from \"react-avatar-editor\";\n// prettier-ignore\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\n\nclass UserPanel extends React.Component {\n  state = {\n    user: this.props.currentUser,\n    modal: false,\n    previewImage: \"\",\n    croppedImage: \"\",\n    blob: null,\n    uploadedCroppedImage: \"\",\n    storageRef: firebase.storage().ref(),\n    userRef: firebase.auth().currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    metadata: {\n      contentType: \"image/jpeg\"\n    }\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  dropdownOptions = () => [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed in as <strong>{this.state.user.displayName}</strong>\n        </span>\n      ),\n      disabled: true\n    },\n    {\n      key: \"avatar\",\n      text: <span onClick={this.openModal}>Change Avatar</span>\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={this.handleSignout}>Sign Out</span>\n    }\n  ];\n\n  uploadCroppedImage = () => {\n    const { storageRef, userRef, blob, metadata } = this.state;\n\n    storageRef\n      .child(`avatars/users/${userRef.uid}`)\n      .put(blob, metadata)\n      .then(snap => {\n        snap.ref.getDownloadURL().then(downloadURL => {\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\n            this.changeAvatar()\n          );\n        });\n      });\n  };\n\n  changeAvatar = () => {\n    this.state.userRef\n      .updateProfile({\n        photoURL: this.state.uploadedCroppedImage\n      })\n      .then(() => {\n        console.log(\"PhotoURL updated\");\n        this.closeModal();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n    this.state.usersRef\n      .child(this.state.user.uid)\n      .update({ avatar: this.state.uploadedCroppedImage })\n      .then(() => {\n        console.log(\"User avatar updated\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      reader.readAsDataURL(file);\n      reader.addEventListener(\"load\", () => {\n        this.setState({ previewImage: reader.result });\n      });\n    }\n  };\n\n  handleCropImage = () => {\n    if (this.avatarEditor) {\n      this.avatarEditor.getImageScaledToCanvas().toBlob(blob => {\n        let imageUrl = URL.createObjectURL(blob);\n        this.setState({\n          croppedImage: imageUrl,\n          blob\n        });\n      });\n    }\n  };\n\n  handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => console.log(\"signed out!\"));\n  };\n\n  render() {\n    const { user, modal, previewImage, croppedImage } = this.state;\n    const { primaryColor } = this.props;\n\n    return (\n      <Grid style={{ background: primaryColor }}>\n        <Grid.Column>\n          <Grid.Row style={{ padding: \"1.2em\", margin: 0 }}>\n            {/* App Header */}\n            <Header inverted floated=\"left\" as=\"h2\">\n              <Icon name=\"code\" />\n              <Header.Content>Chat</Header.Content>\n            </Header>\n\n            {/* User Dropdown  */}\n            <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n              <Dropdown\n                trigger={\n                  <span>\n                    <Image src={user.photoURL} spaced=\"right\" avatar />\n                    {user.displayName}\n                  </span>\n                }\n                options={this.dropdownOptions()}\n              />\n            </Header>\n          </Grid.Row>\n\n          {/* Change User Avatar Modal   */}\n          <Modal basic open={modal} onClose={this.closeModal}>\n            <Modal.Header>Change Avatar</Modal.Header>\n            <Modal.Content>\n              <Input\n                onChange={this.handleChange}\n                fluid\n                type=\"file\"\n                label=\"New Avatar\"\n                name=\"previewImage\"\n              />\n              <Grid centered stackable columns={2}>\n                <Grid.Row centered>\n                  <Grid.Column className=\"ui center aligned grid\">\n                    {previewImage && (\n                      <AvatarEditor\n                        ref={node => (this.avatarEditor = node)}\n                        image={previewImage}\n                        width={120}\n                        height={120}\n                        border={50}\n                        scale={1.2}\n                      />\n                    )}\n                  </Grid.Column>\n                  <Grid.Column>\n                    {croppedImage && (\n                      <Image\n                        style={{ margin: \"3.5em auto\" }}\n                        width={100}\n                        height={100}\n                        src={croppedImage}\n                      />\n                    )}\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n              {croppedImage && (\n                <Button\n                  color=\"green\"\n                  inverted\n                  onClick={this.uploadCroppedImage}\n                >\n                  <Icon name=\"save\" /> Change Avatar\n                </Button>\n              )}\n              <Button color=\"green\" inverted onClick={this.handleCropImage}>\n                <Icon name=\"image\" /> Preview\n              </Button>\n              <Button color=\"red\" inverted onClick={this.closeModal}>\n                <Icon name=\"remove\" /> Cancel\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default UserPanel;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport {\n  Menu,\n  Icon,\n  Modal,\n  Form,\n  Input,\n  Button,\n  Label\n} from \"semantic-ui-react\";\n\nclass Channels extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    channel: null,\n    channels: [],\n    channelName: \"\",\n    channelDetails: \"\",\n    channelsRef: firebase.database().ref(\"channels\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    typingRef: firebase.database().ref(\"typing\"),\n    notifications: [],\n    modal: false,\n    firstLoad: true\n  };\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelsRef.on(\"child_added\", snap => {\n      loadedChannels.push(snap.val());\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\n      this.addNotificationListener(snap.key);\n    });\n  };\n\n  addNotificationListener = channelId => {\n    this.state.messagesRef.child(channelId).on(\"value\", snap => {\n      if (this.state.channel) {\n        this.handleNotifications(\n          channelId,\n          this.state.channel.id,\n          this.state.notifications,\n          snap\n        );\n      }\n    });\n  };\n\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\n    let lastTotal = 0;\n\n    let index = notifications.findIndex(\n      notification => notification.id === channelId\n    );\n\n    if (index !== -1) {\n      if (channelId !== currentChannelId) {\n        lastTotal = notifications[index].total;\n\n        if (snap.numChildren() - lastTotal > 0) {\n          notifications[index].count = snap.numChildren() - lastTotal;\n        }\n      }\n      notifications[index].lastKnownTotal = snap.numChildren();\n    } else {\n      notifications.push({\n        id: channelId,\n        total: snap.numChildren(),\n        lastKnownTotal: snap.numChildren(),\n        count: 0\n      });\n    }\n\n    this.setState({ notifications });\n  };\n\n  removeListeners = () => {\n    this.state.channelsRef.off();\n    this.state.channel.forEach(channel => {\n      this.state.messagesRef.child(channel.id).off();\n    })\n  };\n\n  setFirstChannel = () => {\n    const firstChannel = this.state.channels[0];\n    if (this.state.firstLoad && this.state.channels.length > 0) {\n      this.props.setCurrentChannel(firstChannel);\n      this.setActiveChannel(firstChannel);\n      this.setState({ channel: firstChannel });\n    }\n    this.setState({ firstLoad: false });\n  };\n\n  addChannel = () => {\n    const { channelsRef, channelName, channelDetails, user } = this.state;\n\n    const key = channelsRef.push().key;\n\n    const newChannel = {\n      id: key,\n      name: channelName,\n      details: channelDetails,\n      createdBy: {\n        name: user.displayName,\n        avatar: user.photoURL\n      }\n    };\n\n    channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelName: \"\", channelDetails: \"\" });\n        this.closeModal();\n        console.log(\"channel added\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.addChannel();\n    }\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  changeChannel = channel => {\n    this.setActiveChannel(channel);\n    this.state.typingRef\n      .child(this.state.channel.id)\n      .child(this.state.user.uid)\n      .remove();\n    this.clearNotifications();\n    this.props.setCurrentChannel(channel);\n    this.props.setPrivateChannel(false);\n    this.setState({ channel });\n  };\n\n  clearNotifications = () => {\n    let index = this.state.notifications.findIndex(\n      notification => notification.id === this.state.channel.id\n    );\n\n    if (index !== -1) {\n      let updatedNotifications = [...this.state.notifications];\n      updatedNotifications[index].total = this.state.notifications[\n        index\n      ].lastKnownTotal;\n      updatedNotifications[index].count = 0;\n      this.setState({ notifications: updatedNotifications });\n    }\n  };\n\n  setActiveChannel = channel => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  getNotificationCount = channel => {\n    let count = 0;\n\n    this.state.notifications.forEach(notification => {\n      if (notification.id === channel.id) {\n        count = notification.count;\n      }\n    });\n\n    if (count > 0) return count;\n  };\n\n  displayChannels = channels =>\n    channels.length > 0 &&\n    channels.map(channel => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.7 }}\n        active={channel.id === this.state.activeChannel}\n      >\n        {this.getNotificationCount(channel) && (\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\n        )}\n        # {channel.name}\n      </Menu.Item>\n    ));\n\n  isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { channels, modal } = this.state;\n\n    return (\n      <React.Fragment>\n        <Menu.Menu className=\"menu\">\n          <Menu.Item>\n            <span>\n              <Icon name=\"exchange\" /> CHANNELS\n            </span>{\" \"}\n            ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\n          </Menu.Item>\n          {this.displayChannels(channels)}\n        </Menu.Menu>\n\n        {/* Add Channel Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Add a Channel</Modal.Header>\n          <Modal.Content>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"Name of Channel\"\n                  name=\"channelName\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"About the Channel\"\n                  name=\"channelDetails\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n            </Form>\n          </Modal.Content>\n\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\n              <Icon name=\"checkmark\" /> Add\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(Channels);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport { Menu, Icon } from \"semantic-ui-react\";\n\nclass DirectMessages extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    users: [],\n    usersRef: firebase.database().ref(\"users\"),\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    presenceRef: firebase.database().ref(\"presence\")\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners = () => {\n    this.state.usersRef.off();\n    this.state.presenceRef.off();\n    this.state.connectedRef.off();\n  };\n\n  addListeners = currentUserUid => {\n    let loadedUsers = [];\n    this.state.usersRef.on(\"child_added\", snap => {\n      if (currentUserUid !== snap.key) {\n        let user = snap.val();\n        user[\"uid\"] = snap.key;\n        user[\"status\"] = \"offline\";\n        loadedUsers.push(user);\n        this.setState({ users: loadedUsers });\n      }\n    });\n\n    this.state.connectedRef.on(\"value\", snap => {\n      if (snap.val() === true) {\n        const ref = this.state.presenceRef.child(currentUserUid);\n        ref.set(true);\n        ref.onDisconnect().remove(err => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n      }\n    });\n\n    this.state.presenceRef.on(\"child_added\", snap => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key);\n      }\n    });\n\n    this.state.presenceRef.on(\"child_removed\", snap => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key, false);\n      }\n    });\n  };\n\n  addStatusToUser = (userId, connected = true) => {\n    const updatedUsers = this.state.users.reduce((acc, user) => {\n      if (user.uid === userId) {\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\n      }\n      return acc.concat(user);\n    }, []);\n    this.setState({ users: updatedUsers });\n  };\n\n  isUserOnline = user => user.status === \"online\";\n\n  changeChannel = user => {\n    const channelId = this.getChannelId(user.uid);\n    const channelData = {\n      id: channelId,\n      name: user.name\n    };\n    this.props.setCurrentChannel(channelData);\n    this.props.setPrivateChannel(true);\n    this.setActiveChannel(user.uid);\n  };\n\n  getChannelId = userId => {\n    const currentUserId = this.state.user.uid;\n    return userId < currentUserId\n      ? `${userId}/${currentUserId}`\n      : `${currentUserId}/${userId}`;\n  };\n\n  setActiveChannel = userId => {\n    this.setState({ activeChannel: userId });\n  };\n\n  render() {\n    const { users, activeChannel } = this.state;\n\n    return (\n      <Menu.Menu className=\"menu\">\n        <Menu.Item>\n          <span>\n            <Icon name=\"mail\" /> DIRECT MESSAGES\n          </span>{\" \"}\n          ({users.length})\n        </Menu.Item>\n        {users.map(user => (\n          <Menu.Item\n            key={user.uid}\n            active={user.uid === activeChannel}\n            onClick={() => this.changeChannel(user)}\n            style={{ opacity: 0.7, fontStyle: \"italic\" }}\n          >\n            <Icon\n              name=\"circle\"\n              color={this.isUserOnline(user) ? \"green\" : \"red\"}\n            />\n            @ {user.name}\n          </Menu.Item>\n        ))}\n      </Menu.Menu>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(DirectMessages);\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nclass Starred extends React.Component {\r\n    state = {\r\n        user: this.props.currentUser,\r\n        usersRef: firebase.database().ref(\"users\"),\r\n        activeChannel:\"\",\r\n        starredChannels: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        if(this.state.user) {\r\n            this.addListeners(this.state.user.uid);\r\n        }    \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.removeListener();\r\n    }\r\n\r\n    removeListener = () => {\r\n        this.state.usersRef.child(`${this.state.user.uid}/starred`).off();\r\n    }\r\n\r\n    addListeners = userId => {\r\n        this.state.usersRef\r\n        .child(userId)\r\n        .child(\"starred\")\r\n        .on(\"child_added\", snap => {\r\n            const starredChannel = { id: snap.key, ...snap.val() };\r\n            this.setState ({\r\n                starredChannels: [...this.state.starredChannels, starredChannel]\r\n            });\r\n        });\r\n    this.state.usersRef\r\n        .child(userId)\r\n        .child(\"starred\")\r\n        .on (\"child_removed\", snap => {\r\n            const channelToRemove = { id: snap.key, ...snap.val()};\r\n            const filteredChannels = this.state.starredChannels.filter(channel => {\r\n                return channel.id !== channelToRemove.id;\r\n            });\r\n            this.setState({ starredChannels: filteredChannels});\r\n        });\r\n    }\r\n\r\n    setActiveChannel = channel => {\r\n        this.setState({ activeChannel: channel.id });\r\n    };\r\n\r\n    changeChannel = channel => {\r\n        this.setActiveChannel(channel);\r\n        this.props.setCurrentChannel(channel);\r\n        this.props.setPrivateChannel(false);\r\n    };\r\n\r\n    displayChannels = starredChannels =>\r\n    starredChannels.length > 0 &&\r\n    starredChannels.map(channel => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.7 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ));\r\n\r\n    render() {\r\n        const { starredChannels, modal } =  this.state;\r\n\r\n        return(\r\n            <Menu.Menu className=\"menu\">\r\n                <Menu.Item>\r\n                <span>\r\n                    <Icon name=\"star\" /> STARRED\r\n                </span>{\" \"}\r\n                ({starredChannels.length}) \r\n                </Menu.Item>\r\n                {this.displayChannels(starredChannels)}\r\n            </Menu.Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { setCurrentChannel, setPrivateChannel }\r\n)(Starred);","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\n\nimport UserPanel from \"./UserPanel\";\nimport Channels from \"./Channels\";\nimport DirectMessages from \"./DirectMessages\";\nimport Starred from \"./Starred\";\n\nclass SidePanel extends React.Component {\n  render() {\n    const { currentUser, primaryColor } = this.props;\n\n    return (\n      <Menu\n        size=\"large\"\n        inverted\n        fixed=\"left\"\n        vertical\n        style={{ background: primaryColor, fontSize: \"1.2rem\" }}\n      >\n        <UserPanel primaryColor={primaryColor} currentUser={currentUser} />\n        <Starred currentUser={currentUser} />\n        <Channels currentUser={currentUser} />\n        <DirectMessages currentUser={currentUser} />\n      </Menu>\n    );\n  }\n}\n\nexport default SidePanel;\n","import React from \"react\";\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\n\nclass MessagesHeader extends React.Component {\n  render() {\n    const {\n      channelName,\n      numUniqueUsers,\n      handleSearchChange,\n      searchLoading,\n      isPrivateChannel,\n      handleStar,\n      isChannelStarred\n    } = this.props;\n\n    return (\n      <Segment clearing>\n        {/* Channel Title */}\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\n          <span>\n            {channelName}\n            {!isPrivateChannel && (\n              <Icon \n                onClick={handleStar}\n                name={isChannelStarred? \"star\" : \"star outline\"} \n                color={isChannelStarred ? \"yellow\" : \"black\"} \n              />\n            )}\n          </span>\n          <Header.Subheader>{numUniqueUsers}</Header.Subheader>\n        </Header>\n\n        {/* Channel Search Input */}\n        <Header floated=\"right\">\n          <Input\n            loading={searchLoading}\n            onChange={handleSearchChange}\n            size=\"mini\"\n            icon=\"search\"\n            name=\"searchTerm\"\n            placeholder=\"Search Messages\"\n          />\n        </Header>\n      </Segment>\n    );\n  }\n}\n\nexport default MessagesHeader;\n","import React from \"react\";\nimport mime from \"mime-types\";\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\n\nclass FileModal extends React.Component {\n  state = {\n    file: null,\n    authorized: [\"image/jpeg\", \"image/png\"]\n  };\n\n  addFile = event => {\n    const file = event.target.files[0];\n    if (file) {\n      this.setState({ file });\n    }\n  };\n\n  sendFile = () => {\n    const { file } = this.state;\n    const { uploadFile, closeModal } = this.props;\n\n    if (file !== null) {\n      if (this.isAuthorized(file.name)) {\n        const metadata = { contentType: mime.lookup(file.name) };\n        uploadFile(file, metadata);\n        closeModal();\n        this.clearFile();\n      }\n    }\n  };\n\n  isAuthorized = filename =>\n    this.state.authorized.includes(mime.lookup(filename));\n\n  clearFile = () => this.setState({ file: null });\n\n  render() {\n    const { modal, closeModal } = this.props;\n\n    return (\n      <Modal basic open={modal} onClose={closeModal}>\n        <Modal.Header>Select an Image File</Modal.Header>\n        <Modal.Content>\n          <Input\n            onChange={this.addFile}\n            fluid\n            label=\"File types: jpg, png\"\n            name=\"file\"\n            type=\"file\"\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.sendFile} color=\"green\" inverted>\n            <Icon name=\"checkmark\" /> Send\n          </Button>\n          <Button color=\"red\" inverted onClick={closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default FileModal;\n","import React from \"react\";\nimport { Progress } from \"semantic-ui-react\";\n\nconst ProgressBar = ({ uploadState, percentUploaded }) =>\n  uploadState === \"uploading\" && (\n    <Progress\n      className=\"progress__bar\"\n      percent={percentUploaded}\n      progress\n      indicating\n      size=\"medium\"\n      inverted\n    />\n  );\n\nexport default ProgressBar;\n","import React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport firebase from \"../../firebase\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport { Picker, emojiIndex } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\nimport FileModal from \"./FileModal\";\nimport ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  state = {\n    storageRef: firebase.storage().ref(),\n    typingRef: firebase.database().ref(\"typing\"),\n    uploadTask: null,\n    uploadState: \"\",\n    percentUploaded: 0,\n    message: \"\",\n    channel: this.props.currentChannel,\n    user: this.props.currentUser,\n    loading: false,\n    errors: [],\n    modal: false,\n    emojiPicker: false\n  };\n\n  componentWillUnmount() {\n    if(this.state.uploadTask !== null) {\n      this.state.uploadTask.cancel();\n      this.setState({ uploadTask: null });\n    }\n  }\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleKeyDown = event => {\n    if(event.keyCode === 13) {\n      this.sendMessage();\n    }\n\n    const { message, typingRef, channel, user } = this.state;\n\n    if (message) {\n      typingRef\n        .child(channel.id)\n        .child(user.uid)\n        .set(user.displayName);\n    } else {\n      typingRef\n        .child(channel.id)\n        .child(user.uid)\n        .remove();\n    }\n  };\n\n  handleTogglePicker = () => {\n    this.setState({ emojiPicker: !this.state.emojiPicker });\n  }\n\n  handleAddEmoji = emoji => {\n    const oldMessage = this.state.message;\n    const newMessage = this.colonToUnicode(`${oldMessage} ${emoji.colons}`);\n    this.setState({ message: newMessage, emojiPicker: false });\n    setTimeout (() => this.messageInputRef.focus(), 0);\n  }\n\n  colonToUnicode = message => {\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, x => {\n      x = x.replace(/:/g, \"\");\n      let emoji = emojiIndex.emojis[x];\n      if( typeof emoji !== \"undefined\") {\n        let unicode = emoji.native;\n        if(typeof unicode !== \"undefined\"){\n          return unicode;\n        }\n      }\n      x = \":\" + x + \":\";\n    });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.state.user.uid,\n        name: this.state.user.displayName,\n        avatar: this.state.user.photoURL\n      }\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  sendMessage = () => {\n    const { getMessagesRef } = this.props;\n    const { message, channel, user, typingRef } = this.state;\n\n    if (message) {\n      this.setState({ loading: true });\n      getMessagesRef()\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\", errors: [] });\n          typingRef\n            .child(channel.id)\n            .child(user.uid)\n            .remove();\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Add a message\" })\n      });\n    }\n  };\n\n  getPath = () => {\n    if (this.props.isPrivateChannel) {\n      return `chat/private/${this.state.channel.id}`;\n    } else {\n      return \"chat/public\";\n    }\n  };\n\n  uploadFile = (file, metadata) => {\n    const pathToUpload = this.state.channel.id;\n    const ref = this.props.getMessagesRef();\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snap => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({ percentUploaded });\n          },\n          err => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadUrl => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch(err => {\n                console.error(err);\n                this.setState({\n                  errors: this.state.errors.concat(err),\n                  uploadState: \"error\",\n                  uploadTask: null\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n  };\n\n  render() {\n    // prettier-ignore\n    const { errors, message, loading, modal, uploadState, percentUploaded,\n    emojiPicker } = this.state;\n\n    return (\n      <Segment className=\"message__form\">\n        {emojiPicker && (\n          <Picker \n            set=\"apple\"\n            onSelect={this.handleAddEmoji}\n            className=\"emojiPIcker\"\n            title=\"Pick your emoji\"\n            emoji=\"point_up\"\n          />\n        )}\n        <Input\n          fluid\n          name=\"message\"\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}\n          value={message}\n          ref={node => (this.messageInputRef = node)}\n          style={{ marginBottom: \"0.7em\" }}\n          label={\n            <Button \n              icon={emojiPicker ? \"close\" : \"add\"} \n              content={emojiPicker ? \"close\" : null}\n              onClick={this.handleTogglePicker}\n            />}          \n          labelPosition=\"left\"\n          className={\n            errors.some(error => error.message.includes(\"message\"))\n              ? \"error\"\n              : \"\"\n          }\n          placeholder=\"Write your message\"\n        />\n        <Button.Group icon widths=\"2\">\n          <Button\n            onClick={this.sendMessage}\n            disabled={loading}\n            color=\"orange\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n          />\n          <Button\n            color=\"teal\"\n            disabled={uploadState === \"uploading\"}\n            onClick={this.openModal}\n            content=\"Upload Media\"\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n          />\n        </Button.Group>\n        <FileModal\n          modal={modal}\n          closeModal={this.closeModal}\n          uploadFile={this.uploadFile}\n        />\n        <ProgressBar\n          uploadState={uploadState}\n          percentUploaded={percentUploaded}\n        />\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\n\nconst isOwnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message__self\" : \"\";\n};\n\nconst isImage = message => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\n};\n\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\n\nconst Message = ({ message, user }) => (\n  <Comment>\n    <Comment.Avatar src={message.user.avatar} />\n    <Comment.Content className={isOwnMessage(message, user)}>\n      <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\n      <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n      {isImage(message) ? (\n        <Image src={message.image} className=\"message__image\" />\n      ) : (\n        <Comment.Text>{message.content}</Comment.Text>\n      )}\n    </Comment.Content>\n  </Comment>\n);\n\nexport default Message;\n","import React from \"react\" ;\r\n\r\nconst Typing = () => (\r\n     <div className=\"typing\">\r\n         <div className=\"typing__dot\"></div>\r\n         <div className=\"typing__dot\"></div>\r\n         <div className=\"typing__dot\"></div>\r\n     </div>\r\n)\r\n\r\nexport default Typing;","import React from \"react\";\r\n\r\nconst Skeleton = () => (\r\n    <div className=\"skeleton\">\r\n        <div className=\"skeleton__avatar\"></div>\r\n        <div className=\"skeleton__author\"></div>\r\n        <div className=\"skeleton__details\"></div>\r\n    </div>\r\n)\r\n\r\nexport default Skeleton;","import React from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { setUserPosts } from \"../../actions\";\nimport firebase from \"../../firebase\";\n\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\nimport Message from \"./Message\";\nimport Typing from \"./Typing\";\nimport Skeleton from \"./skeleton\";\n\nclass Messages extends React.Component {\n  state = {\n    privateChannel: this.props.isPrivateChannel,\n    privateMessagesRef: firebase.database().ref(\"privateMessages\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    messages: [],\n    messagesLoading: true,\n    channel: this.props.currentChannel,\n    isChannelStarred: false,\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    numUniqueUsers: \"\",\n    searchTerm: \"\",\n    searchLoading: false,\n    searchResults: [],\n    typingRef: firebase.database().ref(\"typing\"),\n    typingUsers: [],\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    listeners: []\n  };\n\n  componentDidMount() {\n    const { channel, user, listeners } = this.state;\n\n    if (channel && user) {\n      this.removeListeners(listeners)\n      this.addListeners(channel.id);\n      this.addUserStarsListener(channel.id, user.uid);\n    }\n  }\n\n  addToListeners = (id, ref, event) => {\n    const index = this.state.listeners.findIndex(listener => {\n      return listener.id === id && listener.ref === ref && listener.event === \n      event;\n    })\n\n    if(index === -1){\n      const newListener = {id, ref, event}\n      this.setState({ listeners: this.state.listeners.concat(newListener) });\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners(this.state.listeners);\n    this.state.connectedRef.off();\n  }\n\n  removeListeners = listeners => {\n    listeners.forEach(listener => {\n      listener.ref.child(listener.id).off(listener.event);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesEnd) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({behaviour: \"smooth\"});\n  }\n\n  addListeners = channelId => {\n    this.addMessageListener(channelId);\n    this.addTypingListeners(channelId);\n  };\n\n  addTypingListeners = channelId => {\n    let typingUsers = [];\n    this.state.typingRef.child(channelId).on(\"child_added\", snap => {\n      if (snap.key !== this.state.user.uid) {\n        typingUsers = typingUsers.concat({\n          id: snap.key,\n          name: snap.val()\n        });\n        this.setState({ typingUsers });\n      }\n    });\n\n    this.addToListeners(channelId, this.state.typingRef, \"child_added\");\n\n    this.state.typingRef.child(channelId).on(\"child_removed\", snap => {\n      const index = typingUsers.findIndex(user => user.id === snap.key);\n      if (index !== -1) {\n        typingUsers = typingUsers.filter(user => user.id !== snap.key);\n        this.setState({ typingUsers });\n      }\n    });\n\n    this.addToListeners(channelId, this.state.typingRef, \"child_removed\");\n\n    this.state.connectedRef.on(\"value\", snap => {\n      if (snap.val() === true) {\n        this.state.typingRef\n          .child(channelId)\n          .child(this.state.user.uid)\n          .onDisconnect()\n          .remove(err => {\n            if (err !== null) {\n              console.error(err);\n            }\n          });\n      }\n    });\n  };\n\n  addMessageListener = channelId => {\n    let loadedMessages = [];\n    const ref = this.getMessagesRef();\n    ref.child(channelId).on(\"child_added\", snap => {\n      loadedMessages.push(snap.val());\n      this.setState({\n        messages: loadedMessages,\n        messagesLoading: false\n      });\n      this.countUniqueUsers(loadedMessages);\n      this.countUserPosts(loadedMessages);\n    });\n    this.addToListeners(channelId, ref, \"child_added\");\n  };\n\n  addUserStarsListener = (channelId, userId) => {\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .once(\"value\")\n      .then(data => {\n        if (data.val() !== null) {\n          const channelIds = Object.keys(data.val());\n          const prevStarred = channelIds.includes(channelId);\n          this.setState({ isChannelStarred: prevStarred });\n        }\n      });\n  };\n\n  getMessagesRef = () => {\n    const { messagesRef, privateMessagesRef, privateChannel } = this.state;\n    return privateChannel ? privateMessagesRef : messagesRef;\n  };\n\n  handleStar = () => {\n    this.setState(\n      prevState => ({\n        isChannelStarred: !prevState.isChannelStarred\n      }),\n      () => this.starChannel()\n    );\n  };\n\n  starChannel = () => {\n    if (this.state.isChannelStarred) {\n      this.state.usersRef.child(`${this.state.user.uid}/starred`).update({\n        [this.state.channel.id]: {\n          name: this.state.channel.name,\n          details: this.state.channel.details,\n          createdBy: {\n            name: this.state.channel.createdBy.name,\n            avatar: this.state.channel.createdBy.avatar\n          }\n        }\n      });\n    } else {\n      this.state.usersRef\n        .child(`${this.state.user.uid}/starred`)\n        .child(this.state.channel.id)\n        .remove(err => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n    }\n  };\n\n  handleSearchChange = event => {\n    this.setState(\n      {\n        searchTerm: event.target.value,\n        searchLoading: true\n      },\n      () => this.handleSearchMessages()\n    );\n  };\n\n  handleSearchMessages = () => {\n    const channelMessages = [...this.state.messages];\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\n    const searchResults = channelMessages.reduce((acc, message) => {\n      if (\n        (message.content && message.content.match(regex)) ||\n        message.user.name.match(regex)\n      ) {\n        acc.push(message);\n      }\n      return acc;\n    }, []);\n    this.setState({ searchResults });\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\n  };\n\n  countUniqueUsers = messages => {\n    const uniqueUsers = messages.reduce((acc, message) => {\n      if (!acc.includes(message.user.name)) {\n        acc.push(message.user.name);\n      }\n      return acc;\n    }, []);\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? \"s\" : \"\"}`;\n    this.setState({ numUniqueUsers });\n  };\n\n  countUserPosts = messages => {\n    let userPosts = messages.reduce((acc, message) => {\n      if (message.user.name in acc) {\n        acc[message.user.name].count += 1;\n      } else {\n        acc[message.user.name] = {\n          avatar: message.user.avatar,\n          count: 1\n        };\n      }\n      return acc;\n    }, {});\n    this.props.setUserPosts(userPosts);\n  };\n\n  displayMessages = messages =>\n    messages.length > 0 &&\n    messages.map(message => (\n      <Message\n        key={message.timestamp}\n        message={message}\n        user={this.state.user}\n      />\n    ));\n\n  displayChannelName = channel => {\n    return channel\n      ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`\n      : \"\";\n  };\n\n  displayTypingUsers = users =>\n    users.length > 0 &&\n    users.map(user => (\n      <div\n        style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"0.2em\" }}\n        key={user.id}\n      >\n        <span className=\"user__typing\">{user.name} is typing</span> <Typing />\n      </div>\n    ));\n\n  displayMessageSkeleton = loading => {\n    loading ? (\n      <React.Fragment>\n        {[...Array(10)].map((_, i) => (\n          <Skeleton key={i}/>\n        ))}\n      </React.Fragment>\n    ) : null;\n  };\n\n  render() {\n    // prettier-ignore\n    const { messagesRef, messages, channel, user, numUniqueUsers, searchTerm, searchResults, \n    searchLoading, privateChannel, isChannelStarred, typingUsers, messagesLoading } \n    = this.state;\n\n    return (\n      <React.Fragment>\n        <MessagesHeader\n          channelName={this.displayChannelName(channel)}\n          numUniqueUsers={numUniqueUsers}\n          handleSearchChange={this.handleSearchChange}\n          searchLoading={searchLoading}\n          isPrivateChannel={privateChannel}\n          handleStar={this.handleStar}\n          isChannelStarred={isChannelStarred}\n        />\n\n        <Segment>\n          <Comment.Group className=\"messages\">\n            {this.displayMessageSkeleton(messagesLoading)}\n            {searchTerm\n              ? this.displayMessages(searchResults)\n              : this.displayMessages(messages)}\n            {this.displayTypingUsers(typingUsers)}\n            <div ref={node => (this.messagesEnd = node)}></div>\n          </Comment.Group>\n        </Segment>\n\n        <MessageForm\n          messagesRef={messagesRef}\n          currentChannel={channel}\n          currentUser={user}\n          isPrivateChannel={privateChannel}\n          getMessagesRef={this.getMessagesRef}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setUserPosts }\n)(Messages);\n","import React from \"react\";\nimport { Segment, Header, Icon, Accordion, Image, List } from \"semantic-ui-react\";\n\nclass MetaPanel extends React.Component {\n  state = {\n    channel: this.props.currentChannel,\n    privateChannel: this.props.isPrivateChannel,\n    activeIndex: 0\n  }\n\n  setActiveIndex = (event, titleProps) => { \n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  formatCount = num => (num > 1 || num === 0) ? `${num} posts` : `${num} post`;\n\n  displayTopPosters = posts => (\n    Object.entries(posts)\n      .sort((a, b) => b[1] - a[1])\n      .map(([key, val], i) => (\n        <List.Item key={i}>\n        <Image avatar src={val.avatar}/>\n        <List.Content>\n          <List.Header as=\"a\">\n            {key}\n          </List.Header>\n          <List.Description as=\"a\">\n            {this.formatCount(val.count)}\n          </List.Description>\n        </List.Content>\n        </List.Item>\n    ))\n    .slice(0, 5)\n  )\n\n  render() {\n    const { activeIndex, privateChannel, channel } = this.state;\n    const { userPosts } = this.props;\n\n    if(privateChannel) return null;\n \n    return (\n      <Segment loading={!channel}>\n        <Header as=\"h3\" attached=\"top\">\n          About # {channel && channel.name}\n        </Header>\n        <Accordion styled attached=\"true\"> \n          <Accordion.Title\n            active={activeIndex === 0}\n            index={0}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"info\" />\n            Channel Details\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 0}>\n            {channel && channel.details} \n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 1}\n            index={1}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"user circle\" />\n            Top Posters\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 1}>\n            <List>\n              { userPosts && this.displayTopPosters(userPosts) }\n            </List>             \n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 2}\n            index={2}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"pencil alternate\" />\n            Created By\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 2}>\n            <Header as=\"h3\">\n              <Image circular src={channel && channel.createdBy.avatar} /> \n              {channel && channel.createdBy.name}    \n            </Header>\n          </Accordion.Content>\n        </Accordion>\n      </Segment>\n    );\n  }\n}\n\nexport default MetaPanel;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\n\nimport ColorPanel from \"./ColorPanel/ColorPanel\";\nimport SidePanel from \"./SidePanel/SidePanel\";\nimport Messages from \"./Messages/Messages\";\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\n\nconst App = ({ currentUser, currentChannel, isPrivateChannel, userPosts,\nprimaryColor, secondaryColor }) => (\n  <Grid columns=\"equal\" className=\"app\" style={{ background: secondaryColor }}>\n    <ColorPanel\n      key={currentUser && currentUser.name}\n      currentUser={currentUser}\n    />\n    <SidePanel \n      key={currentUser && currentUser.uid} \n      currentUser={currentUser}\n      primaryColor={primaryColor} \n    />\n\n    <Grid.Column style={{ marginLeft: 320 }}>\n      <Messages\n        key={currentChannel && currentChannel.id}\n        currentChannel={currentChannel}\n        currentUser={currentUser}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n\n    <Grid.Column width={4}>\n      <MetaPanel\n        key={currentChannel && currentChannel.name}\n        userPosts={userPosts}\n        currentChannel={currentChannel}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n  </Grid>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n  userPosts: state.channel.userPosts,\n  primaryColor: state.colors.primaryColor,\n  secondaryColor: state.colors.secondaryColor\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(signedInUser => {\n          console.log(signedInUser);\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\n            <Icon name=\"code branch\" color=\"violet\" />\n            Login to HelpingHand\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"violet\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Don't have an account? <Link to=\"/register\">Register</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref(\"users\")\n  };\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: \"Fill in all fields\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      error = { message: \"Password is invalid\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !passwordConfirmation.length\n    );\n  };\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    if (password.length < 6 || passwordConfirmation.length < 6) {\n      return false;\n    } else if (password !== passwordConfirmation) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid()) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then(createdUser => {\n          console.log(createdUser);\n          createdUser.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `http://gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              this.saveUser(createdUser).then(() => {\n                console.log(\"user saved\");\n              });\n            })\n            .catch(err => {\n              console.error(err);\n              this.setState({\n                errors: this.state.errors.concat(err),\n                loading: false\n              });\n            });\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  saveUser = createdUser => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      loading\n    } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"orange\" textAlign=\"center\">\n            <Icon name=\"puzzle piece\" color=\"orange\" />\n            Register for HelpingHand\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"username\"\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                onChange={this.handleChange}\n                value={username}\n                type=\"text\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"passwordConfirmation\"\n                icon=\"repeat\"\n                iconPosition=\"left\"\n                placeholder=\"Password Confirmation\"\n                onChange={this.handleChange}\n                value={passwordConfirmation}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"orange\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Already a user? <Link to=\"/login\">Login</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => (\n  <Dimmer active>\n    <Loader size=\"huge\" content={\"Preparing Chat...\"} />\n  </Dimmer>\n);\n\nexport default Spinner;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport * as actionTypes from \"../actions/types\";\n\nconst initialUserState = {\n  currentUser: null,\n  isLoading: true,\n  userPosts: null\n};\n\nconst user_reducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        currentUser: action.payload.currentUser,\n        isLoading: false\n      };\n    case actionTypes.CLEAR_USER:\n      return {\n        ...state,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialChannelState = {\n  currentChannel: null,\n  isPrivateChannel: false\n};\n\nconst channel_reducer = (state = initialChannelState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload.currentChannel\n      };\n    case actionTypes.SET_PRIVATE_CHANNEL:\n      return {\n        ...state,\n        isPrivateChannel: action.payload.isPrivateChannel\n      };\n    case actionTypes.SET_PRIVATE_POSTS:\n      return {\n        ...state,\n        userPosts: action.payload.userPosts\n      }\n    default:\n      return state;\n  }\n};\n\nconst InitialColorsState = {\n  primaryColor: \"#4c3c4c\",\n  secondaryColor: \"#eee\"\n}\n\nconst colors_reducer = (state = InitialColorsState, action) => {\n  switch(action.type){\n    case actionTypes.SET_COLORS:\n      return {\n        primaryColor: action.payload.primaryColor,\n        secondaryColor: action.payload.secondaryColor\n      }\n    default:\n      return state;  \n  }\n};\n\nconst rootReducer = combineReducers({\n  user: user_reducer,\n  channel: channel_reducer,\n  colors: colors_reducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Spinner from \"./Spinner\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport firebase from \"./firebase\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\n\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport { setUser, clearUser } from \"./actions\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // console.log(user);\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.history.push(\"/login\");\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateFromProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nconst RootWithAuth = withRouter(\n  connect(\n    mapStateFromProps,\n    { setUser, clearUser }\n  )(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}